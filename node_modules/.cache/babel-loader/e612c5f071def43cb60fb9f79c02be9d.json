{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes.js';\nimport { updateObject } from '../utility.js'; // GLOBAL CONSTANTS IN CAPITALS\n\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  bacon: 0.7,\n  meat: 1.3\n};\nconst initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false,\n  building: false\n};\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      const updatedIngredient = {\n        [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n      };\n      const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n      const updatedState = {\n        ingredients: updatedIngredients,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        building: true\n      };\n      return updateObject(state, updatedState);\n\n    case actionTypes.REMOVE_INGREDIENT:\n      const updatedIng = {\n        [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n      };\n      const updatedIngs = updateObject(state.ingredients, updatedIng);\n      const updatedSt = {\n        ingredients: updatedIngs,\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n        building: true\n      };\n      return updateObject(state, updatedSt);\n\n    case actionTypes.SET_INGREDIENTS:\n      return updateObject(state, {\n        ingredients: {\n          salad: action.ingredients.salad,\n          meat: action.ingredients.meat,\n          bacon: action.ingredients.bacon,\n          cheese: action.ingredients.cheese\n        },\n        totalPrice: 4,\n        error: false,\n        building: false\n      });\n\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return updateObject(state, {\n        error: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/daveotengo/Desktop/git/react/my-app_a/src/store/reducers/burger_reducer.js"],"names":["actionTypes","updateObject","INGREDIENT_PRICES","salad","cheese","bacon","meat","initialState","ingredients","totalPrice","error","building","reducer","state","action","type","ADD_INGREDIENT","updatedIngredient","ingredientName","updatedIngredients","updatedState","REMOVE_INGREDIENT","updatedIng","updatedIngs","updatedSt","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,2BAA7B;AACA,SAASC,YAAT,QAA4B,eAA5B,C,CAEA;;AACA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,KAAK,EAAE,GADiB;AAExBC,EAAAA,MAAM,EAAE,GAFgB;AAGxBC,EAAAA,KAAK,EAAE,GAHiB;AAIxBC,EAAAA,IAAI,EAAE;AAJkB,CAA1B;AAOA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,IADM;AAEnBC,EAAAA,UAAU,EAAE,CAFO;AAGnBC,EAAAA,KAAK,EAAE,KAHY;AAInBC,EAAAA,QAAQ,EAAE;AAJS,CAArB;;AAQA,MAAMC,OAAO,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKf,WAAW,CAACgB,cAAjB;AACE,YAAMC,iBAAiB,GAAG;AAAC,SAACH,MAAM,CAACI,cAAR,GAAyBL,KAAK,CAACL,WAAN,CAAkBM,MAAM,CAACI,cAAzB,IAA2C;AAArE,OAA1B;AACA,YAAMC,kBAAkB,GAAGlB,YAAY,CAACY,KAAK,CAACL,WAAP,EAAoBS,iBAApB,CAAvC;AACA,YAAMG,YAAY,GAAG;AACnBZ,QAAAA,WAAW,EAAEW,kBADM;AAEnBV,QAAAA,UAAU,EAAGI,KAAK,CAACJ,UAAN,GAAmBP,iBAAiB,CAACY,MAAM,CAACI,cAAR,CAF9B;AAGnBP,QAAAA,QAAQ,EAAE;AAHS,OAArB;AAKE,aAAOV,YAAY,CAACY,KAAD,EAAQO,YAAR,CAAnB;;AACJ,SAAKpB,WAAW,CAACqB,iBAAjB;AACE,YAAMC,UAAU,GAAE;AAAC,SAACR,MAAM,CAACI,cAAR,GAAyBL,KAAK,CAACL,WAAN,CAAkBM,MAAM,CAACI,cAAzB,IAA2C;AAArE,OAAlB;AACA,YAAMK,WAAW,GAAGtB,YAAY,CAACY,KAAK,CAACL,WAAP,EAAoBc,UAApB,CAAhC;AACA,YAAME,SAAS,GAAE;AACfhB,QAAAA,WAAW,EAAEe,WADE;AAEfd,QAAAA,UAAU,EAAGI,KAAK,CAACJ,UAAN,GAAmBP,iBAAiB,CAACY,MAAM,CAACI,cAAR,CAFlC;AAGfP,QAAAA,QAAQ,EAAE;AAHK,OAAjB;AAKE,aAAOV,YAAY,CAACY,KAAD,EAAQW,SAAR,CAAnB;;AACJ,SAAKxB,WAAW,CAACyB,eAAjB;AACE,aAAOxB,YAAY,CAACY,KAAD,EAAQ;AACzBL,QAAAA,WAAW,EAAE;AACXL,UAAAA,KAAK,EAAEW,MAAM,CAACN,WAAP,CAAmBL,KADf;AAEXG,UAAAA,IAAI,EAAEQ,MAAM,CAACN,WAAP,CAAmBF,IAFd;AAGXD,UAAAA,KAAK,EAAES,MAAM,CAACN,WAAP,CAAmBH,KAHf;AAIXD,UAAAA,MAAM,EAAEU,MAAM,CAACN,WAAP,CAAmBJ;AAJhB,SADY;AAOzBK,QAAAA,UAAU,EAAE,CAPa;AAQzBC,QAAAA,KAAK,EAAE,KARkB;AASzBC,QAAAA,QAAQ,EAAE;AATe,OAAR,CAAnB;;AAWF,SAAKX,WAAW,CAAC0B,wBAAjB;AACE,aAAOzB,YAAY,CAACY,KAAD,EAAQ;AACzBH,QAAAA,KAAK,EAAE;AADkB,OAAR,CAAnB;;AAGF;AACE,aAAOG,KAAP;AApCJ;AAsCD,CAvCD;;AAyCA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes.js';\nimport { updateObject} from '../utility.js';\n\n// GLOBAL CONSTANTS IN CAPITALS\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  bacon: 0.7,\n  meat: 1.3\n};\n\nconst initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false,\n  building: false,\n  \n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      const updatedIngredient = {[action.ingredientName]: state.ingredients[action.ingredientName] + 1};\n      const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n      const updatedState = {\n        ingredients: updatedIngredients,\n        totalPrice:  state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        building: true,\n        }\n        return updateObject(state, updatedState);\n    case actionTypes.REMOVE_INGREDIENT:\n      const updatedIng= {[action.ingredientName]: state.ingredients[action.ingredientName] - 1};\n      const updatedIngs = updateObject(state.ingredients, updatedIng);\n      const updatedSt= {\n        ingredients: updatedIngs,\n        totalPrice:  state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n        building: true,\n        }\n        return updateObject(state, updatedSt);\n    case actionTypes.SET_INGREDIENTS:\n      return updateObject(state, {\n        ingredients: {\n          salad: action.ingredients.salad,\n          meat: action.ingredients.meat,\n          bacon: action.ingredients.bacon,\n          cheese: action.ingredients.cheese\n        },\n        totalPrice: 4,\n        error: false,\n        building: false,\n      });\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return updateObject(state, {\n        error: true\n      });\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}