{"ast":null,"code":"var _jsxFileName = \"/Users/daveotengo/Desktop/git/react/my-app_a/src/components/UI/Modal/Modal.js\";\nimport React from 'react';\nimport classes from './Modal.module.css';\nimport Aux from '../../../hoc/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Modal extends React.Component {\n  //check if shown - only rerender it if it can be seen!\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.Modal,\n        children: props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Modal;","map":{"version":3,"sources":["/Users/daveotengo/Desktop/git/react/my-app_a/src/components/UI/Modal/Modal.js"],"names":["React","classes","Aux","Backdrop","Modal","Component","shouldComponentUpdate","nextProps","nextState","show","props","children","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAElC;AACAC,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAsB;AACzC,WAAOD,SAAS,CAACE,IAAV,KAAmB,KAAKC,KAAL,CAAWD,IAA9B,IAAsCF,SAAS,CAACI,QAAV,KAAuB,KAAKD,KAAL,CAAWC,QAA/E;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAEP,wBACE,QAAC,GAAD;AAAA,6BACE;AAAK,QAAA,SAAS,EAAEX,OAAO,CAACG,KAAxB;AAAA,kBACGM,KAAK,CAACC;AADT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AAzBiC;;AA4BpC,eAAeP,KAAf","sourcesContent":["import React from 'react';\nimport classes from './Modal.module.css';\nimport Aux from '../../../hoc/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends React.Component {\n\n  //check if shown - only rerender it if it can be seen!\n  shouldComponentUpdate(nextProps, nextState){\n    return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n  }\n\n  render (){\n\n    return(\n      <Aux>\n        <div className={classes.Modal}>\n          {props.children}\n          </div>\n        {/* <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\n        <div\n          className={classes.Modal}\n          style={{\n            transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n            opacity: this.props.show ? '1' : '0'\n          }}>\n          {this.props.children}\n        </div> */}\n      </Aux>\n    );\n  }\n}\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}