{"ast":null,"code":"var _jsxFileName = \"/Users/daveotengo/Desktop/git/react/my-app_a/src/containers/Orders/Orders.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Aux from '../../hoc/Aux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Orders extends React.Component {\n  componentDidMount() {\n    //this.props.onFetchOrders(this.props.token, this.props.userId);\n    this.props.onFetchOrders();\n  }\n\n  render() {\n    let orders = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 18\n    }, this);\n\n    if (!this.props.loading) {\n      orders = this.props.orders.map(order =>\n      /*#__PURE__*/\n      // <Order\n      //   key={order.id}\n      //   ingredients={order.ingredients}\n      //   price={order.price} />\n      _jsxDEV(Aux, {\n        children: [/*#__PURE__*/_jsxDEV(Order, {\n          price: \"4\"\n        }, '1', false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Order, {\n          price: \"4\"\n        }, '1', false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: orders\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.orders.orders,\n    loading: state.orders.loading // token: state.auth.token,\n    // userId: state.auth.userId\n\n  };\n}; // const mapDispatchToProps = dispatch => {\n//   return {\n//     onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\n//   };\n// };\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: () => dispatch(actions.fetchOrders())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","map":{"version":3,"sources":["/Users/daveotengo/Desktop/git/react/my-app_a/src/containers/Orders/Orders.js"],"names":["React","connect","Order","axios","withErrorHandler","actions","Spinner","Aux","Orders","Component","componentDidMount","props","onFetchOrders","render","orders","loading","map","order","mapStateToProps","state","mapDispatchToProps","dispatch","fetchOrders"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,qBAAzB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,GAAP,MAAgB,eAAhB;;;AAEA,MAAMC,MAAN,SAAqBR,KAAK,CAACS,SAA3B,CAAqC;AACnCC,EAAAA,iBAAiB,GAAE;AACjB;AACA,SAAKC,KAAL,CAAWC,aAAX;AAED;;AACDC,EAAAA,MAAM,GAAE;AACN,QAAIC,MAAM,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAb;;AACA,QAAI,CAAC,KAAKH,KAAL,CAAWI,OAAhB,EAAwB;AACtBD,MAAAA,MAAM,GACJ,KAAKH,KAAL,CAAWG,MAAX,CAAkBE,GAAlB,CAAsBC,KAAK;AAAA;AAC3B;AACA;AACA;AACA;AACA,cAAC,GAAD;AAAA,gCACA,QAAC,KAAD;AAAgB,UAAA,KAAK,EAAC;AAAtB,WAAY,GAAZ;AAAA;AAAA;AAAA;AAAA,gBADA,eAIE,QAAC,KAAD;AACS,UAAA,KAAK,EAAC;AADf,WACK,GADL;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cALA,CADF;AAeD;;AACD,wBACE;AAAA,gBACGH;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AA9BkC;;AAiCrC,MAAMI,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLL,IAAAA,MAAM,EAAEK,KAAK,CAACL,MAAN,CAAaA,MADhB;AAELC,IAAAA,OAAO,EAAEI,KAAK,CAACL,MAAN,CAAaC,OAFjB,CAGL;AACA;;AAJK,GAAP;AAMD,CAPD,C,CASA;AACA;AACA;AACA;AACA;;;AAEA,MAAMK,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLT,IAAAA,aAAa,EAAE,MAAMS,QAAQ,CAAChB,OAAO,CAACiB,WAAR,EAAD;AADxB,GAAP;AAGD,CAJD;;AAMA,eAAerB,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ChB,gBAAgB,CAACI,MAAD,EAASL,KAAT,CAA7D,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Aux from '../../hoc/Aux'\n\nclass Orders extends React.Component {\n  componentDidMount(){\n    //this.props.onFetchOrders(this.props.token, this.props.userId);\n    this.props.onFetchOrders();\n\n  }\n  render(){\n    let orders = <Spinner />\n    if (!this.props.loading){\n      orders =\n        this.props.orders.map(order => (\n        // <Order\n        //   key={order.id}\n        //   ingredients={order.ingredients}\n        //   price={order.price} />\n        <Aux>\n        <Order key ='1' price='4'\n          />\n\n          <Order\n          key ='1' price='4'\n          />\n          </Aux>\n      ))\n    }\n    return (\n      <div>\n        {orders}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.orders.orders,\n    loading: state.orders.loading,\n    // token: state.auth.token,\n    // userId: state.auth.userId\n  };\n};\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\n//   };\n// };\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: () => dispatch(actions.fetchOrders())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));\n"]},"metadata":{},"sourceType":"module"}