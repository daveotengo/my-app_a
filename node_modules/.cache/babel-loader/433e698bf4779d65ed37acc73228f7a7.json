{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    userId: userId\n  };\n};\nexport const authFailure = error => {\n  return {\n    type: actionTypes.AUTH_FAILURE,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.setItem('token', null);\n  localStorage.setItem('expirationDate', null);\n  return dispatch => {\n    dispatch(logoutSucceed());\n  }; // return {\n  //   type: actionTypes.AUTH_INITIATE_LOGOUT,\n  // }\n};\nexport const logoutSucceed = () => {\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  // return {\n  //   type: actionTypes.AUTH_CHECK_TIMEOUT,\n  //   expirationTime: expirationTime\n  // }; \n  const expTime = expirationTime * 1000;\n  console.log(\"printing expTime\");\n  console.log(expTime);\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expTime);\n  };\n};\nexport const auth = (email, password, isSignUp) => {\n  return dispatch => {\n    let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBrdCSdMnrFeCeXAjSJr4KeOWbGSAR6Ct4';\n\n    if (!isSignUp) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBrdCSdMnrFeCeXAjSJr4KeOWbGSAR6Ct4';\n    }\n\n    console.log(\"printing url\");\n    console.log(url);\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: isSignUp\n    }; // {kind: \"identitytoolkit#SignupNewUserResponse\",â€¦}\n    // email: \"daveotengo@yahoo.com\"\n    // expiresIn: \"3600\"\n    // idToken: \"eyJhbGciOiJSUzI1NiIsImtpZCI6IjQ3OTg5ZTU4ZWU1ODM4OTgzZDhhNDQwNWRlOTVkYTllZTZmNWVlYjgiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vcmVhY3QtbXktYnVyZ2VyLTlmNmU3IiwiYXVkIjoicmVhY3QtbXktYnVyZ2VyLTlmNmU3IiwiYXV0aF90aW1lIjoxNjM4Nzg1OTM4LCJ1c2VyX2lkIjoiczJmc1Z6ZldrYVVvNGl3MXpKUWg1T202djZUMiIsInN1YiI6InMyZnNWemZXa2FVbzRpdzF6SlFoNU9tNnY2VDIiLCJpYXQiOjE2Mzg3ODU5MzgsImV4cCI6MTYzODc4OTUzOCwiZW1haWwiOiJkYXZlb3RlbmdvQHlhaG9vLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJkYXZlb3RlbmdvQHlhaG9vLmNvbSJdfSwic2lnbl9pbl9wcm92aWRlciI6InBhc3N3b3JkIn19.RtzS4pHWGlcmoO8mVOOEVEv3XZJkkZWRqrgMFm-hO3ixs1oj7vlJ6wnElrkfMnx3h5K7nK5F9G7LCuYWX4Lh5J4f8B7SX39iY4qCDqD1z8OmNuYMtdNgqeyIjJZTGWMpib4bFuaYpezgkyH7apSEWZS6vqPlUEjrYJl8xgr15O5R5mzdaMsUnK8xb_R2-ZJRpn1xY_gfKDE-1nPBsf3j4D0u2obaImw3L-Fjy862N8XPNrzgwoU6vFY2b9mXJVo4J7WOx4VrEDKOlB9Y3scl-Crj4u4AMtquzkQ4Wn_iCebT6dBtpK9x6LR2XsPHCA1Jpkm2LHOAiLIuSCcg_SIIqA\"\n    // kind: \"identitytoolkit#SignupNewUserResponse\"\n    // localId: \"s2fsVzfWkaUo4iw1zJQh5Om6v6T2\"\n    // refreshToken: \"AFxQ4_pD62PG6irLBpc7iK5-f5kWd6_E1EM5pEwSNJ1zE7gQt19mZ9sSiHQ97u5K9wys_yNjVk_x4EBhfrFU1HcZ4MNmho62LH35GSak-bxD24eXrq2kExx_weog4QOo_smKb14c-RIjXadDXzlQ8TiFMMcOZECPLVqA0TDta8iUPMmjpJZqMi81rLtmfvUop25iwiDJ7yRGauHXE3TvSwfC5y1aoj7qsPgkZJ0mCDtfdgdWnJJzRIo\"\n\n    dispatch(authStart());\n    axios.post(url, authData).then(response => {\n      console.log(response); // const expirationDate = new Date(new Date.getTime() + response.data.expiresIn * 1000) \n      //        localStorage.setItem('expirationDate',expirationDate)\n\n      localStorage.setItem('token', response.data.idToken);\n      localStorage.setItem('userId', response.data.email);\n      dispatch(authSuccess(response.data.idToken, response.data.email));\n\n      if (!isSignUp) {//dispatch(checkAuthTimeout(response.data.expiresIn));\n      }\n    }).catch(error => {\n      console.log(\"printing error\");\n      console.log(error);\n      dispatch(authFailure(error.response.data.error));\n      console.log(\"printing error.message\");\n      console.log(error.message);\n      console.log(\"printing error.code\");\n      console.log(error.code);\n\n      if (error.response) {\n        // Request made and server responded\n        console.log(\"printing resp.data\");\n        console.log(error.response.data);\n        console.log(\"printing resp.data.error.message\");\n        console.log(error.response.data.error.message);\n        console.log(\"printing resp.status\");\n        console.log(error.response.status);\n        console.log(\"printing resp.headers\");\n        console.log(error.response.headers);\n      } else if (error.request) {\n        // The request was made but no response was received\n        console.log(\"printing printing request\");\n        console.log(error.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.log(\"printing error.message\");\n        console.log('Error', error.message);\n      }\n    });\n  }; // return {\n  //   type: actionTypes.AUTH_USER,\n  //   email: email,\n  //   password: password,\n  //   isSignUp: isSignUp\n  // }\n};\nexport const setAuthRedirectPath = path => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    console.log(\"logging token in authcheck\");\n    console.log(token);\n    console.log(\"token state\");\n    console.log(token !== null);\n\n    if (token !== \"null\") {\n      console.log(\"not dispatching logout authcheckstate\"); //const expirationDate =  localStorage.getItem('expirationDate');\n      // if( expirationDate <= new Date()){\n      //   dispatch(logout());\n      // }else{\n\n      const userId = localStorage.getItem('userId');\n      dispatch(authSuccess(token, userId)); //dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()))/1000);\n      //}\n    } else {\n      console.log(token);\n      console.log(\"dispatching logout authcheckstate\");\n      dispatch(logout());\n    }\n  }; // return {\n  //   type: actionTypes.AUTH_CHECK_STATE\n  // }\n};","map":{"version":3,"sources":["/Users/daveotengo/Desktop/git/react/my-app_a/src/store/actions/auth_actions.js"],"names":["actionTypes","axios","authStart","type","AUTH_START","authSuccess","token","userId","AUTH_SUCCESS","authFailure","error","AUTH_FAILURE","logout","localStorage","setItem","dispatch","logoutSucceed","AUTH_LOGOUT","checkAuthTimeout","expirationTime","expTime","console","log","setTimeout","auth","email","password","isSignUp","url","authData","returnSecureToken","post","then","response","data","idToken","catch","message","code","status","headers","request","setAuthRedirectPath","path","SET_AUTH_REDIRECT_PATH","authCheckState","getItem"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\n\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    userId: userId\n  };\n};\n\nexport const authFailure = (error) => {\n  return {\n    type: actionTypes.AUTH_FAILURE,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.setItem('token',null);\n  localStorage.setItem('expirationDate',null);\n\n  return dispatch=>{\n    dispatch(logoutSucceed());\n  }\n  // return {\n  //   type: actionTypes.AUTH_INITIATE_LOGOUT,\n  // }\n};\n\nexport const logoutSucceed = () => {\n return {\n   type: actionTypes.AUTH_LOGOUT,\n  };\n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n  // return {\n  //   type: actionTypes.AUTH_CHECK_TIMEOUT,\n  //   expirationTime: expirationTime\n  // }; \n  const expTime = expirationTime*1000;\n  console.log(\"printing expTime\")\n  console.log(expTime);\n\n  return dispatch => {\n    setTimeout(()=>{\n      dispatch(logout())\n    },expTime)\n  }\n};\n\nexport const auth = (email, password, isSignUp) => {\n\n  return dispatch => {\n\n    let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBrdCSdMnrFeCeXAjSJr4KeOWbGSAR6Ct4';\n\n    if(!isSignUp){\n\n       url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBrdCSdMnrFeCeXAjSJr4KeOWbGSAR6Ct4';\n\n    }\n\n    console.log(\"printing url\")\n    console.log(url);\n\n\n    const authData = {\n\n      email: email,\n      password: password,\n      returnSecureToken: isSignUp\n\n    }\n\n    // {kind: \"identitytoolkit#SignupNewUserResponse\",â€¦}\n    // email: \"daveotengo@yahoo.com\"\n    // expiresIn: \"3600\"\n    // idToken: \"eyJhbGciOiJSUzI1NiIsImtpZCI6IjQ3OTg5ZTU4ZWU1ODM4OTgzZDhhNDQwNWRlOTVkYTllZTZmNWVlYjgiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vcmVhY3QtbXktYnVyZ2VyLTlmNmU3IiwiYXVkIjoicmVhY3QtbXktYnVyZ2VyLTlmNmU3IiwiYXV0aF90aW1lIjoxNjM4Nzg1OTM4LCJ1c2VyX2lkIjoiczJmc1Z6ZldrYVVvNGl3MXpKUWg1T202djZUMiIsInN1YiI6InMyZnNWemZXa2FVbzRpdzF6SlFoNU9tNnY2VDIiLCJpYXQiOjE2Mzg3ODU5MzgsImV4cCI6MTYzODc4OTUzOCwiZW1haWwiOiJkYXZlb3RlbmdvQHlhaG9vLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJkYXZlb3RlbmdvQHlhaG9vLmNvbSJdfSwic2lnbl9pbl9wcm92aWRlciI6InBhc3N3b3JkIn19.RtzS4pHWGlcmoO8mVOOEVEv3XZJkkZWRqrgMFm-hO3ixs1oj7vlJ6wnElrkfMnx3h5K7nK5F9G7LCuYWX4Lh5J4f8B7SX39iY4qCDqD1z8OmNuYMtdNgqeyIjJZTGWMpib4bFuaYpezgkyH7apSEWZS6vqPlUEjrYJl8xgr15O5R5mzdaMsUnK8xb_R2-ZJRpn1xY_gfKDE-1nPBsf3j4D0u2obaImw3L-Fjy862N8XPNrzgwoU6vFY2b9mXJVo4J7WOx4VrEDKOlB9Y3scl-Crj4u4AMtquzkQ4Wn_iCebT6dBtpK9x6LR2XsPHCA1Jpkm2LHOAiLIuSCcg_SIIqA\"\n    // kind: \"identitytoolkit#SignupNewUserResponse\"\n    // localId: \"s2fsVzfWkaUo4iw1zJQh5Om6v6T2\"\n    // refreshToken: \"AFxQ4_pD62PG6irLBpc7iK5-f5kWd6_E1EM5pEwSNJ1zE7gQt19mZ9sSiHQ97u5K9wys_yNjVk_x4EBhfrFU1HcZ4MNmho62LH35GSak-bxD24eXrq2kExx_weog4QOo_smKb14c-RIjXadDXzlQ8TiFMMcOZECPLVqA0TDta8iUPMmjpJZqMi81rLtmfvUop25iwiDJ7yRGauHXE3TvSwfC5y1aoj7qsPgkZJ0mCDtfdgdWnJJzRIo\"\n    dispatch(authStart());\n\n    axios.post(url,authData).\n    then(response => {\n\n        console.log(response);\n\n        // const expirationDate = new Date(new Date.getTime() + response.data.expiresIn * 1000) \n        //        localStorage.setItem('expirationDate',expirationDate)\n\n        localStorage.setItem('token',response.data.idToken)\n        localStorage.setItem('userId',response.data.email)\n\n\n        dispatch(authSuccess(response.data.idToken,response.data.email));\n        if(!isSignUp){\n          //dispatch(checkAuthTimeout(response.data.expiresIn));\n        }\n\n\n    }).catch(error=>{\n\n      console.log(\"printing error\");\n      console.log(error)\n\n      dispatch(authFailure(error.response.data.error));\n\n      console.log(\"printing error.message\");\n      console.log(error.message);\n      console.log(\"printing error.code\");\n      console.log(error.code);\n\n\n\n      if (error.response) {\n        // Request made and server responded\n        console.log(\"printing resp.data\");\n        console.log(error.response.data);\n\n        console.log(\"printing resp.data.error.message\");\n        console.log(error.response.data.error.message);\n\n        console.log(\"printing resp.status\");\n        console.log(error.response.status);\n        console.log(\"printing resp.headers\");\n        console.log(error.response.headers);\n\n      } else if (error.request) {\n        // The request was made but no response was received\n        console.log(\"printing printing request\");\n        console.log(error.request);\n\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.log(\"printing error.message\");\n        console.log('Error', error.message);\n      }\n    })\n  }\n  // return {\n  //   type: actionTypes.AUTH_USER,\n  //   email: email,\n  //   password: password,\n  //   isSignUp: isSignUp\n  // }\n}\n\nexport const setAuthRedirectPath = (path) => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path\n  }\n}\n\nexport const authCheckState = () => {\n  return dispatch => {\n  const token =  localStorage.getItem('token');\n  console.log(\"logging token in authcheck\")\n  console.log(token);\n  console.log(\"token state\")\n  console.log(token!==null);\n\n  if(token!==\"null\"){\n\n    console.log(\"not dispatching logout authcheckstate\")\n    //const expirationDate =  localStorage.getItem('expirationDate');\n    // if( expirationDate <= new Date()){\n    //   dispatch(logout());\n\n    // }else{\n      const userId = localStorage.getItem('userId');\n\n      dispatch(authSuccess(token,userId));\n\n    //dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()))/1000);\n\n\n    //}\n\n  \n\n  }else{\n    console.log(token)\n    console.log(\"dispatching logout authcheckstate\")\n\n    dispatch(logout());\n  \n  }\n  }\n\n  \n  // return {\n  //   type: actionTypes.AUTH_CHECK_STATE\n  // }\n};\n"]},"metadata":{},"sourceType":"module"}