{"ast":null,"code":"var _jsxFileName = \"/Users/daveotengo/Desktop/git/react/my-app_a/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport { Component } from \"react\";\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BulidControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchasing: false,\n      purchasable: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.updatePurchaseState = ingredients => {\n      const sum = Object.keys(ingredients).map(igKey => {\n        return ingredients[igKey];\n      }).reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n      return this.setState({\n        purchasable: sum > 0\n      });\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      }); // if(this.props.isAuthenticated){\n      //   this.setState({\n      //     purchasing: true\n      //   });\n      // } else {\n      //   this.props.onSetAuthRedirectPath(\"/checkout\");\n      //   this.props.history.push(\"/auth\");\n      // }\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      this.props.onInitPurchase();\n      this.props.history.push('/checkout');\n    };\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.purchasing,\n        modalClosed: this.purchaseCancelHandler,\n        children: /*#__PURE__*/_jsxDEV(OrderSummary, {\n          ingredients: this.state.ingredients,\n          purchaseCancelled: this.purchaseCancelHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 91\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Burger, {\n        ingredients: this.state.ingredients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(BuildControls, {\n        ingredientAdded: this.addIngredientHandler,\n        ingredientRemoved: this.removeIngredientHandler,\n        disabled: disabledInfo,\n        price: this.state.totalPrice,\n        purchasable: this.state.purchasable,\n        ordered: this.purchaseHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/Users/daveotengo/Desktop/git/react/my-app_a/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["Component","Aux","Burger","BuildControls","Modal","OrderSummary","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasing","purchasable","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","sum","Object","keys","map","igKey","reduce","el","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","props","onInitPurchase","history","push","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BulidControls/BuildControls'\nimport Modal from '../../components/UI/Modal/Modal'\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\n\nconst INGREDIENT_PRICES = {\n    salad : 0.5,\n    cheese : 0.4,\n    meat : 1.3,\n    bacon : 0.7\n};\n\nclass BurgerBuilder extends Component{\n\n   \n\n    state = {\n        ingredients:{\n            salad:0,\n            bacon:0,\n            cheese:0,\n            meat:0\n        },\n\n        totalPrice: 4,\n\n        purchasing: false,\n\n        purchasable:false,\n    }\n\n    render () {\n\n        const disabledInfo={\n            ...this.state.ingredients\n        }\n\n        for (let key in disabledInfo){\n            disabledInfo[key] = disabledInfo[key] <=0\n        }\n\n        return (\n            <Aux>\n            <Modal show={this.state.purchasing}  modalClosed={this.purchaseCancelHandler}><OrderSummary ingredients={this.state.ingredients} purchaseCancelled={this.purchaseCancelHandler} ></OrderSummary></Modal>\n            <Burger ingredients={this.state.ingredients} />\n            <BuildControls \n                ingredientAdded = {this.addIngredientHandler} \n                ingredientRemoved={this.removeIngredientHandler} \n                disabled={disabledInfo} price={this.state.totalPrice}\n                purchasable={this.state.purchasable}\n                ordered = {this.purchaseHandler}\n             />\n          \n\n            </Aux>\n        );\n    }\n\n\n    addIngredientHandler=(type) =>{\n        const oldCount=this .state.ingredients[type];\n        const updatedCount=oldCount + 1;\n        const updatedIngredients={\n            ...this.state.ingredients\n        }\n        updatedIngredients[type]=updatedCount;\n        const priceAddition=INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n\n        this.setState({totalPrice:newPrice, ingredients:updatedIngredients})\n        this.updatePurchaseState(updatedIngredients)\n    }\n\n    removeIngredientHandler=(type) =>{\n        const oldCount=this .state.ingredients[type];\n        const updatedCount=oldCount - 1;\n        const updatedIngredients={\n            ...this.state.ingredients\n        }\n        updatedIngredients[type]=updatedCount;\n        const priceAddition=INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceAddition;\n\n        this.setState({totalPrice:newPrice, ingredients:updatedIngredients})\n        this.updatePurchaseState(updatedIngredients)\n    }\n\n    //.......................................\n\n\n    updatePurchaseState = (ingredients) => {\n        const sum = Object.keys(ingredients)\n          .map(igKey => {\n            return ingredients[igKey];\n          })\n          .reduce((sum, el) => {\n            return sum + el;\n          }, 0);\n          return this.setState({ purchasable: sum > 0});\n      }\n    \n      purchaseHandler = () => {\n        this.setState({\n            purchasing: true\n          });\n        // if(this.props.isAuthenticated){\n        //   this.setState({\n        //     purchasing: true\n        //   });\n        // } else {\n        //   this.props.onSetAuthRedirectPath(\"/checkout\");\n        //   this.props.history.push(\"/auth\");\n        // }\n      }\n    \n      purchaseCancelHandler = () => {\n        this.setState({\n          purchasing: false\n        })\n      }\n    \n      purchaseContinueHandler = () => {\n        this.props.onInitPurchase();\n        this.props.history.push('/checkout');\n      }  \n}\n\nexport default BurgerBuilder;\n"]},"metadata":{},"sourceType":"module"}