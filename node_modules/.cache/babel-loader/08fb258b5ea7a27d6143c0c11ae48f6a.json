{"ast":null,"code":"var _jsxFileName = \"/Users/daveotengo/Desktop/git/react/my-app_a/src/components/Burger/Burger.js\";\nimport React from 'react'; //import { withRouter } from 'react-router-dom';\n\nimport classes from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst burger = props => {\n  //turns object of key-value pairs into an array of ingredients\n  let transformedIngredients = Object.keys(props.ingredients).map(ingKey => {\n    return [...Array(props.ingredients[ingKey])].map((_, i) => {\n      return /*#__PURE__*/_jsxDEV(BurgerIngredient, {\n        type: ingKey\n      }, ingKey + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 18\n      }, this);\n    });\n  }).reduce((arr, el) => {\n    return arr.concat(el);\n  }, []);\n\n  if (transformedIngredients.length === 0) {\n    transformedIngredients = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please start adding ingredients!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 30\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.Burger,\n    children: [/*#__PURE__*/_jsxDEV(BurgerIngredient, {\n      type: \"bread-top\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), transformedIngredients, /*#__PURE__*/_jsxDEV(BurgerIngredient, {\n      type: \"bread-bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}; //wrapping component with withRouter injects it with router props\n\n\nexport default burger;","map":{"version":3,"sources":["/Users/daveotengo/Desktop/git/react/my-app_a/src/components/Burger/Burger.js"],"names":["React","classes","BurgerIngredient","burger","props","transformedIngredients","Object","keys","ingredients","map","ingKey","Array","_","i","reduce","arr","el","concat","length","Burger"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB;AACA,MAAIC,sBAAsB,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAK,CAACI,WAAlB,EACxBC,GADwB,CACpBC,MAAM,IAAI;AACb,WAAO,CAAC,GAAGC,KAAK,CAACP,KAAK,CAACI,WAAN,CAAkBE,MAAlB,CAAD,CAAT,EAAsCD,GAAtC,CAA0C,CAACG,CAAD,EAAIC,CAAJ,KAAU;AACzD,0BAAO,QAAC,gBAAD;AAAmC,QAAA,IAAI,EAAEH;AAAzC,SAAuBA,MAAM,GAAGG,CAAhC;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,CAAP;AAGD,GALwB,EAMxBC,MANwB,CAMjB,CAACC,GAAD,EAAMC,EAAN,KAAa;AACjB,WAAOD,GAAG,CAACE,MAAJ,CAAWD,EAAX,CAAP;AACH,GARwB,EAQtB,EARsB,CAA7B;;AASA,MAAIX,sBAAsB,CAACa,MAAvB,KAAkC,CAAtC,EAAwC;AACtCb,IAAAA,sBAAsB,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAzB;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACkB,MAAxB;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,EAEKd,sBAFL,eAGE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CArBD,C,CAsBA;;;AACA,eAAeF,MAAf","sourcesContent":["import React from 'react';\n//import { withRouter } from 'react-router-dom';\nimport classes from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = (props) => {\n  //turns object of key-value pairs into an array of ingredients\n  let transformedIngredients = Object.keys(props.ingredients)\n      .map(ingKey => {\n        return [...Array(props.ingredients[ingKey])].map((_, i) => {\n          return <BurgerIngredient key={ingKey + i} type={ingKey} />;\n        });\n      })\n      .reduce((arr, el) => {\n          return arr.concat(el)\n      }, []);\n  if (transformedIngredients.length === 0){\n    transformedIngredients = <p>Please start adding ingredients!</p>\n  }\n  return(\n    <div className={classes.Burger}>\n      <BurgerIngredient type=\"bread-top\" />\n        {transformedIngredients}\n      <BurgerIngredient type=\"bread-bottom\" />\n    </div>\n  );\n};\n//wrapping component with withRouter injects it with router props\nexport default burger;"]},"metadata":{},"sourceType":"module"}