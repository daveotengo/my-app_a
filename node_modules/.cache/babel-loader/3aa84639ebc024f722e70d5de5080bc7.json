{"ast":null,"code":"var _jsxFileName = \"/Users/daveotengo/Desktop/git/react/my-app_a/src/containers/Orders/Orders.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Orders extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      orders: [],\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    // this.props.onFetchOrders(this.props.token, this.props.userId);\n    this.props.onFetchOrders();\n    axios.get('/orders.json').then(response => {\n      this.setState({\n        loading: false\n      });\n      console.log(response);\n      const fetchOrders = [];\n\n      for (let key in response.data) {\n        fetchOrders.push({ ...response.data[key],\n          id: key\n        });\n      }\n\n      this.setState({\n        ingredients: fetchOrders,\n        loading: false\n      });\n    }).catch(error => {\n      this.setState({\n        loading: false\n      });\n      console.log(error);\n    });\n  }\n\n  render() {\n    let orders = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 18\n    }, this); //if (!this.props.loading){\n    // if (!this.state.loading){\n\n\n    orders = this.props.orders.map(order => /*#__PURE__*/_jsxDEV(Order, {\n      ingredients: order.ingredients,\n      price: order.price\n    }, order.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)); //}\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: orders\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.orders.orders,\n    loading: state.orders.loading // token: state.auth.token,\n    // userId: state.auth.userId\n\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: () => dispatch(actions.fetchOrders())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","map":{"version":3,"sources":["/Users/daveotengo/Desktop/git/react/my-app_a/src/containers/Orders/Orders.js"],"names":["React","connect","Order","axios","withErrorHandler","actions","Spinner","Orders","Component","state","orders","loading","componentDidMount","props","onFetchOrders","get","then","response","setState","console","log","fetchOrders","key","data","push","id","ingredients","catch","error","render","map","order","price","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,qBAAzB;AACA,OAAOC,OAAP,MAAoB,qCAApB;;;AAEA,MAAMC,MAAN,SAAqBP,KAAK,CAACQ,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAEnCC,KAFmC,GAE3B;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,OAAO,EAAC;AAFF,KAF2B;AAAA;;AAMnCC,EAAAA,iBAAiB,GAAE;AAClB;AACA,SAAKC,KAAL,CAAWC,aAAX;AAGAX,IAAAA,KAAK,CAACY,GAAN,CAAU,cAAV,EAA0BC,IAA1B,CAA+BC,QAAQ,IAAE;AACxC,WAAKC,QAAL,CAAc;AAACP,QAAAA,OAAO,EAAC;AAAT,OAAd;AAEAQ,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEA,YAAMI,WAAW,GAAG,EAApB;;AACA,WAAK,IAAIC,GAAT,IAAgBL,QAAQ,CAACM,IAAzB,EAA8B;AAC5BF,QAAAA,WAAW,CAACG,IAAZ,CAAiB,EACf,GAAGP,QAAQ,CAACM,IAAT,CAAcD,GAAd,CADY;AAEfG,UAAAA,EAAE,EAAGH;AAFU,SAAjB;AAID;;AAED,WAAKJ,QAAL,CAAc;AAACQ,QAAAA,WAAW,EAACL,WAAb;AAAyBV,QAAAA,OAAO,EAAC;AAAjC,OAAd;AAED,KAfA,EAeEgB,KAfF,CAeQC,KAAK,IAAE;AACd,WAAKV,QAAL,CAAc;AAACP,QAAAA,OAAO,EAAC;AAAT,OAAd;AAGAQ,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AAED,KArBA;AAwBA;;AACDC,EAAAA,MAAM,GAAE;AACN,QAAInB,MAAM,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAb,CADM,CAEN;AACC;;;AACCA,IAAAA,MAAM,GACJ,KAAKG,KAAL,CAAWH,MAAX,CAAkBoB,GAAlB,CAAsBC,KAAK,iBAC3B,QAAC,KAAD;AAEE,MAAA,WAAW,EAAEA,KAAK,CAACL,WAFrB;AAGE,MAAA,KAAK,EAAEK,KAAK,CAACC;AAHf,OACOD,KAAK,CAACN,EADb;AAAA;AAAA;AAAA;AAAA,YADA,CADF,CAJI,CAWN;;AACA,wBACE;AAAA,gBACGf;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AArDkC;;AAwDrC,MAAMuB,eAAe,GAAGxB,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,MAAM,EAAED,KAAK,CAACC,MAAN,CAAaA,MADhB;AAELC,IAAAA,OAAO,EAAEF,KAAK,CAACC,MAAN,CAAaC,OAFjB,CAGL;AACA;;AAJK,GAAP;AAMD,CAPD;;AASA,MAAMuB,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLrB,IAAAA,aAAa,EAAE,MAAMqB,QAAQ,CAAC9B,OAAO,CAACgB,WAAR,EAAD;AADxB,GAAP;AAGD,CAJD;;AAKA,eAAepB,OAAO,CAACgC,eAAD,EAAkBC,kBAAlB,CAAP,CAA6C9B,gBAAgB,CAACG,MAAD,EAASJ,KAAT,CAA7D,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nclass Orders extends React.Component {\n\n  state = {\n    orders :[],\n    loading:false\n  }\n  componentDidMount(){\n   // this.props.onFetchOrders(this.props.token, this.props.userId);\n   this.props.onFetchOrders();\n\n\n   axios.get('/orders.json').then(response=>{\n    this.setState({loading:false});\n\n    console.log(response);\n\n    const fetchOrders = [];\n    for (let key in response.data){\n      fetchOrders.push({\n        ...response.data[key],\n        id : key\n      })\n    }\n\n    this.setState({ingredients:fetchOrders,loading:false});\n    \n  }).catch(error=>{\n    this.setState({loading:false});\n\n\n    console.log(error)\n\n  });\n\n\n  }\n  render(){\n    let orders = <Spinner />\n    //if (!this.props.loading){\n     // if (!this.state.loading){\n      orders =\n        this.props.orders.map(order => (\n        <Order\n          key={order.id}\n          ingredients={order.ingredients}\n          price={order.price} />\n      ))\n    //}\n    return (\n      <div>\n        {orders}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.orders.orders,\n    loading: state.orders.loading,\n    // token: state.auth.token,\n    // userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: () => dispatch(actions.fetchOrders())\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));\n"]},"metadata":{},"sourceType":"module"}