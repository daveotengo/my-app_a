{"ast":null,"code":"var _jsxFileName = \"/Users/daveotengo/Desktop/git/react/my-app_a/src/containers/Orders/Orders.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Aux from '../../hoc/Aux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Orders extends React.Component {\n  componentDidMount() {\n    //this.props.onFetchOrders(this.props.token, this.props.userId);\n    this.props.onFetchOrders();\n    axios.get('/orders.json').then(response => {\n      //this.setState({loading:false});\n      console.log(response);\n      console.log(\"printing response.data\");\n      console.log(response.data.CustomerName.name); //this.setState({ingredients:response.data});\n\n      this.props.FetchOrdersSuccess(response.data);\n    }).catch(error => {\n      //this.setState({loading:false});\n      console.log(error);\n    });\n  }\n\n  render() {\n    let orders = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 18\n    }, this); //if (!this.props.loading){\n\n\n    orders = this.props.orders.map(order => /*#__PURE__*/_jsxDEV(Order, {\n      ingredients: order.ingredients,\n      price: order.price\n    }, order.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)); // let ords = (<Aux>\n    //   <Order key ='1' price='4'\n    //     />\n    //     <Order\n    //       key ='2' price='4'\n    //     />\n    //     </Aux>);\n    //}\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: orders\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.orders.orders,\n    loading: state.orders.loading // token: state.auth.token,\n    // userId: state.auth.userId\n\n  };\n}; // const mapDispatchToProps = dispatch => {\n//   return {\n//     onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\n//   };\n// };\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: () => dispatch(actions.fetchOrders()),\n    onFetchOrdersSuccess: orders => dispatch(actions.fetchOrdersSuccess(orders))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","map":{"version":3,"sources":["/Users/daveotengo/Desktop/git/react/my-app_a/src/containers/Orders/Orders.js"],"names":["React","connect","Order","axios","withErrorHandler","actions","Spinner","Aux","Orders","Component","componentDidMount","props","onFetchOrders","get","then","response","console","log","data","CustomerName","name","FetchOrdersSuccess","catch","error","render","orders","map","order","ingredients","price","id","mapStateToProps","state","loading","mapDispatchToProps","dispatch","fetchOrders","onFetchOrdersSuccess","fetchOrdersSuccess"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,qBAAzB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,GAAP,MAAgB,eAAhB;;;AAEA,MAAMC,MAAN,SAAqBR,KAAK,CAACS,SAA3B,CAAqC;AACnCC,EAAAA,iBAAiB,GAAE;AACjB;AACA,SAAKC,KAAL,CAAWC,aAAX;AAEAT,IAAAA,KAAK,CAACU,GAAN,CAAU,cAAV,EAA0BC,IAA1B,CAA+BC,QAAQ,IAAE;AACvC;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcC,YAAd,CAA2BC,IAAvC,EALuC,CAMvC;;AACA,WAAKT,KAAL,CAAWU,kBAAX,CAA8BN,QAAQ,CAACG,IAAvC;AAGD,KAVD,EAUGI,KAVH,CAUSC,KAAK,IAAE;AAEd;AAGAP,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AAED,KAjBD;AAoBD;;AACDC,EAAAA,MAAM,GAAE;AACN,QAAIC,MAAM,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAb,CADM,CAEN;;;AAEEA,IAAAA,MAAM,GAAE,KAAKd,KAAL,CAAWc,MAAX,CAAkBC,GAAlB,CAAsBC,KAAK,iBACjC,QAAC,KAAD;AAEE,MAAA,WAAW,EAAEA,KAAK,CAACC,WAFrB;AAGE,MAAA,KAAK,EAAED,KAAK,CAACE;AAHf,OACOF,KAAK,CAACG,EADb;AAAA;AAAA;AAAA;AAAA,YADM,CAAR,CAJI,CAaJ;AACA;AACA;AAEA;AACA;AACA;AACA;AACF;;AACA,wBACE;AAAA,gBACGL;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAtDkC;;AAyDrC,MAAMM,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLP,IAAAA,MAAM,EAAEO,KAAK,CAACP,MAAN,CAAaA,MADhB;AAELQ,IAAAA,OAAO,EAAED,KAAK,CAACP,MAAN,CAAaQ,OAFjB,CAGL;AACA;;AAJK,GAAP;AAMD,CAPD,C,CASA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLvB,IAAAA,aAAa,EAAE,MAAMuB,QAAQ,CAAC9B,OAAO,CAAC+B,WAAR,EAAD,CADxB;AAELC,IAAAA,oBAAoB,EAAGZ,MAAD,IAAYU,QAAQ,CAAC9B,OAAO,CAACiC,kBAAR,CAA2Bb,MAA3B,CAAD;AAFrC,GAAP;AAKD,CAND;;AAQA,eAAexB,OAAO,CAAC8B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C9B,gBAAgB,CAACI,MAAD,EAASL,KAAT,CAA7D,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Aux from '../../hoc/Aux'\n\nclass Orders extends React.Component {\n  componentDidMount(){\n    //this.props.onFetchOrders(this.props.token, this.props.userId);\n    this.props.onFetchOrders();\n\n    axios.get('/orders.json').then(response=>{\n      //this.setState({loading:false});\n\n      console.log(response);\n      console.log(\"printing response.data\");\n      console.log(response.data.CustomerName.name);\n      //this.setState({ingredients:response.data});\n      this.props.FetchOrdersSuccess(response.data)\n\n      \n    }).catch(error=>{\n\n      //this.setState({loading:false});\n\n\n      console.log(error)\n\n    });\n\n\n  }\n  render(){\n    let orders = <Spinner />\n    //if (!this.props.loading){\n      \n      orders =this.props.orders.map(order => (\n        <Order\n          key={order.id}\n          ingredients={order.ingredients}\n          price={order.price} />\n          \n        \n      ))\n\n      // let ords = (<Aux>\n      //   <Order key ='1' price='4'\n      //     />\n\n      //     <Order\n      //       key ='2' price='4'\n      //     />\n      //     </Aux>);\n    //}\n    return (\n      <div>\n        {orders}\n        {/* {ords} */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.orders.orders,\n    loading: state.orders.loading,\n    // token: state.auth.token,\n    // userId: state.auth.userId\n  };\n};\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\n//   };\n// };\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: () => dispatch(actions.fetchOrders()),\n    onFetchOrdersSuccess: (orders) => dispatch(actions.fetchOrdersSuccess(orders))\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));\n"]},"metadata":{},"sourceType":"module"}