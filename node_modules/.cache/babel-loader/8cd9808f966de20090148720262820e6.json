{"ast":null,"code":"var _jsxFileName = \"/Users/daveotengo/Desktop/git/react/my-app_a/src/components/Burger/Burger.js\";\nimport React from 'react'; //import { withRouter } from 'react-router-dom';\n\nimport classes from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst burger = props => {\n  //turns object of key-value pairs into an array of ingredients\n  // let transformedIngredients = Object.keys(props.ingredients)\n  //     .map(ingKey => {\n  //       return [...Array(props.ingredients[ingKey])].map((_, i) => {\n  //         return <BurgerIngredient key={ingKey + i} type={ingKey} />;\n  //       });\n  //     })\n  //     .reduce((arr, el) => {\n  //         return arr.concat(el)\n  //     }, []);\n  // if (transformedIngredients.length === 0){\n  //   transformedIngredients = <p>Please start adding ingredients!</p>\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.Burger,\n    children: [/*#__PURE__*/_jsxDEV(BurgerIngredient, {\n      type: \"bread-top\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BurgerIngredient, {\n      type: \"cheese\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BurgerIngredient, {\n      type: \"meat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BurgerIngredient, {\n      type: \"bread-bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}; //wrapping component with withRouter injects it with router props\n\n\nexport default burger;","map":{"version":3,"sources":["/Users/daveotengo/Desktop/git/react/my-app_a/src/components/Burger/Burger.js"],"names":["React","classes","BurgerIngredient","burger","props","Burger"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBACE;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACI,MAAxB;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,YAHF,eAME,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAxBD,C,CAyBA;;;AACA,eAAeF,MAAf","sourcesContent":["import React from 'react';\n//import { withRouter } from 'react-router-dom';\nimport classes from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = (props) => {\n  //turns object of key-value pairs into an array of ingredients\n  // let transformedIngredients = Object.keys(props.ingredients)\n  //     .map(ingKey => {\n  //       return [...Array(props.ingredients[ingKey])].map((_, i) => {\n  //         return <BurgerIngredient key={ingKey + i} type={ingKey} />;\n  //       });\n  //     })\n  //     .reduce((arr, el) => {\n  //         return arr.concat(el)\n  //     }, []);\n  // if (transformedIngredients.length === 0){\n  //   transformedIngredients = <p>Please start adding ingredients!</p>\n  // }\n  return(\n    <div className={classes.Burger}>\n      <BurgerIngredient type=\"bread-top\" />\n      <BurgerIngredient type=\"cheese\" />\n      <BurgerIngredient type=\"meat\" />\n\n        {/* {transformedIngredients}  */}\n      <BurgerIngredient type=\"bread-bottom\" />\n    </div>\n  );\n};\n//wrapping component with withRouter injects it with router props\nexport default burger;"]},"metadata":{},"sourceType":"module"}