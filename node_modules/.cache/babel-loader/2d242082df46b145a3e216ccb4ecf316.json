{"ast":null,"code":"var _jsxFileName = \"/Users/daveotengo/Desktop/git/react/my-app_a/src/containers/BurgerBuilder/BurgerBuilder.js\",\n    _s = $RefreshSig$();\n\nimport { Component } from \"react\";\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BulidControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Checkout from '../Checkout/Checkout';\nimport { Route, Routes } from 'react-router-dom';\nimport ContactData from '../Checkout/ContactData/ContactData';\nimport Orders from '../Orders/Orders';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      ingredients: null,\n      //   ingredients:{\n      //     salad:0,\n      //     bacon:0,\n      //     cheese:0,\n      //     meat:0\n      // },\n      totalPrice: 4,\n      purchasing: false,\n      purchasable: false,\n      loading: false\n    };\n\n    this.postIngredientHandler = () => {\n      const postIngredientReq = {\n        salad: 2,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      };\n      axios.post('/ingredients.json', postIngredientReq).then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.updatePurchaseState = ingredients => {\n      console.log(ingredients);\n      const sum = Object.keys(ingredients).map(igKey => {\n        return ingredients[igKey];\n      }).reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n      return sum > 0;\n    };\n\n    this.purchaseHandler = () => {\n      // this.setState({\n      //     purchasing: true\n      //   });\n      if (this.props.isAuthenticated) {\n        this.setState({\n          purchasing: true\n        });\n      } else {\n        const queryParams = [];\n\n        for (let i in this.props.ings) {\n          queryParams.push(encodeURIComponent(i) + \"=\" + encodeURIComponent(this.props.ings[i]));\n        }\n\n        const queryString = queryParams.join('&');\n        this.props.onSetAuthRedirectPath(\"/checkout?\" + queryString);\n        this.props.navigate(\"/auth\"); //this.props.history.push(\"/auth\");\n      }\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      const queryParams = [];\n\n      for (let i in this.props.ings) {\n        queryParams.push(encodeURIComponent(i) + \"=\" + encodeURIComponent(this.props.ings[i]));\n      }\n\n      const queryString = queryParams.join('&');\n      this.props.navigate(\"/checkout/\" + \"?\" + queryString, {\n        state: {\n          id: 1,\n          name: 'sabaoon'\n        }\n      });\n      this.setState({\n        loading: false\n      });\n      this.setState({\n        purchasing: false\n      }); //  const postOrderRequest={\n      //       ingredients : this.state.ingredients,\n      //       price: this.state.price,\n      //       customerName:{\n      //         name:'David Oteng',\n      //         address:{\n      //           street: 'East Legon',\n      //           zipcode: '233',\n      //           country: 'Ghana'\n      //       },\n      //       email:'daveotengo@gmail.com',\n      //       },\n      //       deliverymethod:'fastest'\n      //   }\n      //   axios.post('/orders.json',postOrderRequest)\n      //   .then(response=>{\n      //     this.setState({loading:false,purchasing:false});\n      //     console.log(response);\n      //   }).catch(error=>{\n      //     this.setState({loading:false,purchasing:false});\n      //     console.log(\"printing error\");\n      //     console.log(error);\n      //   });\n      //alert(\"you can continue\");\n      // this.props.onInitPurchase();\n      //this.props.history.push('/checkout');\n    };\n  }\n\n  componentDidUpdate() {\n    console.log(\"componenet did update\");\n  }\n\n  componentDidMount() {\n    console.log(\"printing props\");\n    console.log(this.props);\n    console.log(\"componenet did mount\");\n    this.props.onInitIngredients();\n  }\n\n  render() {\n    const disabledInfo = { ...this.props.ings\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let burger = null;\n    let orderSummary = null;\n    let checkout = null;\n\n    if (this.props.ings == null) {\n      burger = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 20\n      }, this);\n      orderSummary = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 26\n      }, this);\n    } else {\n      burger = /*#__PURE__*/_jsxDEV(Aux, {\n        children: [/*#__PURE__*/_jsxDEV(Burger, {\n          ingredients: this.props.ings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(BuildControls, {\n          isAuthenticated: this.props.isAuthenticated //ingredientAdded = {this.addIngredientHandler} \n          ,\n          ingredientAdded: this.props.onIngredientAdded //ingredientRemoved={this.removeIngredientHandler} \n          ,\n          ingredientRemoved: this.props.onIngredientRemoved,\n          disabled: disabledInfo,\n          price: this.props.price,\n          purchasable: this.updatePurchaseState(this.props.ings),\n          ordered: this.purchaseHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this);\n      orderSummary = /*#__PURE__*/_jsxDEV(OrderSummary, {\n        ingredients: this.props.ings,\n        purchaseCancelled: this.purchaseCancelHandler,\n        purchaseContinued: this.purchaseContinueHandler,\n        price: this.props.price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this);\n      checkout = /*#__PURE__*/_jsxDEV(Checkout, {\n        ings: this.props.ings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this);\n\n      if (this.props.loading) {\n        burger = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 22\n        }, this);\n        orderSummary = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 28\n        }, this);\n      }\n    }\n\n    let modal = /*#__PURE__*/_jsxDEV(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      children: orderSummary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 20\n    }, this); // if(!this.props.isAuthenticated&&this.state.purchasing){\n    //   modal =  <Navigate to='/auth' />\n    // }\n\n\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      children: [modal, burger]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this);\n  }\n\n} //export default withErrorHandler(BurgerBuilder,axios);\n\n\nfunction WithNavigate(props) {\n  _s();\n\n  let navigate = useNavigate();\n  const location = useLocation(); //return <Blog {...props} navigate={navigate} location={location} />\n\n  return /*#__PURE__*/_jsxDEV(BurgerBuilder, { ...props,\n    navigate: navigate,\n    location: location\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 318,\n    columnNumber: 10\n  }, this);\n} //export default  withErrorHandler(WithNavigate,axios);\n\n\n_s(WithNavigate, \"VDZHUspDq9N5O9RWjniBrjgIdAA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = WithNavigate;\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    price: state.burgerBuilder.totalPrice,\n    error: state.burgerBuilder.error,\n    building: state.burgerBuilder.building,\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingName => dispatch(actions.addIngredient(ingName)),\n    onIngredientRemoved: ingName => dispatch(actions.removeIngredient(ingName)),\n    onInitIngredients: () => dispatch(actions.initIngredients()),\n    onInitPurchase: () => dispatch(actions.purchaseInit()),\n    onSetAuthRedirectPath: path => dispatch(actions.setAuthRedirectPath(path))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(WithNavigate, axios));\n\nvar _c;\n\n$RefreshReg$(_c, \"WithNavigate\");","map":{"version":3,"sources":["/Users/daveotengo/Desktop/git/react/my-app_a/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["Component","Aux","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","withErrorHandler","useNavigate","useLocation","Checkout","Route","Routes","ContactData","Orders","connect","actions","Navigate","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasing","purchasable","loading","postIngredientHandler","postIngredientReq","post","then","response","console","log","catch","error","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","sum","Object","keys","map","igKey","reduce","el","purchaseHandler","props","isAuthenticated","queryParams","i","ings","push","encodeURIComponent","queryString","join","onSetAuthRedirectPath","navigate","purchaseCancelHandler","purchaseContinueHandler","id","name","componentDidUpdate","componentDidMount","onInitIngredients","render","disabledInfo","key","burger","orderSummary","checkout","onIngredientAdded","onIngredientRemoved","price","modal","WithNavigate","location","mapStateToProps","burgerBuilder","building","auth","token","mapDispatchToProps","dispatch","ingName","addIngredient","removeIngredient","initIngredients","onInitPurchase","purchaseInit","path","setAuthRedirectPath"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BulidControls/BuildControls'\nimport Modal from '../../components/UI/Modal/Modal'\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\nimport axios from '../../axios-orders'\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\nimport {useNavigate,useLocation} from 'react-router-dom';\nimport Checkout from '../Checkout/Checkout'\nimport {Route,Routes} from 'react-router-dom'\nimport ContactData from '../Checkout/ContactData/ContactData';\nimport Orders from '../Orders/Orders'\nimport {connect} from 'react-redux';\nimport * as actions from '../../store/actions';\nimport { Navigate } from 'react-router-dom';\n\n\n\n\n\nconst INGREDIENT_PRICES = {\n    salad : 0.5,\n    cheese : 0.4,\n    meat : 1.3,\n    bacon : 0.7\n};\n\nclass BurgerBuilder extends Component{\n\n   \n\n    state = {\n        ingredients:null,\n\n      //   ingredients:{\n      //     salad:0,\n      //     bacon:0,\n      //     cheese:0,\n      //     meat:0\n      // },\n\n        totalPrice: 4,\n\n        purchasing: false,\n\n        purchasable:false,\n        loading: false,\n    }\n\n    componentDidUpdate(){\n\n      console.log(\"componenet did update\")\n      \n    }\n\n    componentDidMount(){\n      console.log(\"printing props\");\n      console.log(this.props)\n\n      console.log(\"componenet did mount\")\n    \n      this.props.onInitIngredients();\n\n\n    \n  \n     }\n\n     postIngredientHandler=()=>{\n\n       const postIngredientReq = {\n        salad:2,\n        bacon:0,\n        cheese:0,\n        meat:0\n\n       }\n\n       axios.post('/ingredients.json',postIngredientReq)\n       .then(response=>{\n         console.log(response);\n       }).catch(error=>{\n         console.log(error);\n       });\n     }\n\n    render () {\n\n        const disabledInfo={\n            ...this.props.ings\n        }\n\n        for (let key in disabledInfo){\n            disabledInfo[key] = disabledInfo[key] <=0\n        }\n\n        let burger = null\n        let orderSummary=null;\n       let checkout = null ;\n\n        if(this.props.ings==null){\n          burger = <Spinner /> \n          orderSummary = <Spinner /> \n\n        }else{\n          burger = (\n            <Aux>\n            <Burger ingredients={this.props.ings} />\n            <BuildControls isAuthenticated={this.props.isAuthenticated}\n                //ingredientAdded = {this.addIngredientHandler} \n                ingredientAdded = {this.props.onIngredientAdded} \n\n                //ingredientRemoved={this.removeIngredientHandler} \n                ingredientRemoved={this.props.onIngredientRemoved} \n\n                disabled={disabledInfo} price={this.props.price}\n                purchasable={this.updatePurchaseState(this.props.ings)}\n                ordered = {this.purchaseHandler}\n             />\n             </Aux>\n          );\n\n          orderSummary = (\n          \n            <OrderSummary ingredients={this.props.ings}\n               purchaseCancelled={this.purchaseCancelHandler} \n                purchaseContinued={this.purchaseContinueHandler} \n                price={this.props.price}\n                >\n            </OrderSummary>\n         \n          );\n\n          checkout = (\n            <Checkout ings={this.props.ings}/>\n          );\n\n\n\n          if(this.props.loading ){\n            burger = <Spinner /> \n            orderSummary = <Spinner />\n          }\n        }\n\n        let modal= <Modal show={this.state.purchasing}  modalClosed={this.purchaseCancelHandler}>\n        {orderSummary}\n          </Modal>;\n\n        // if(!this.props.isAuthenticated&&this.state.purchasing){\n        //   modal =  <Navigate to='/auth' />\n        // }\n         \n        return (\n         \n            <Aux>\n            {modal}\n                {burger}\n            {/* <Routes>    \n                <Route  index exact element={burger} />\n                <Route path=\"/checkout\"  element={checkout} />\n                <Route path=\"/contact-data\"  element={<Aux>{checkout}<ContactData /></Aux>} />\n\n                <Route path=\"/orders\" element={<Orders/>} /> \n            </Routes> */}\n\n            </Aux>\n        );\n    }\n\n\n    addIngredientHandler=(type) =>{\n        const oldCount=this.state.ingredients[type];\n        const updatedCount=oldCount + 1;\n        const updatedIngredients={\n            ...this.state.ingredients\n        }\n        updatedIngredients[type]=updatedCount;\n        const priceAddition=INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n\n        this.setState({totalPrice:newPrice, ingredients:updatedIngredients})\n        this.updatePurchaseState(updatedIngredients)\n    }\n\n    removeIngredientHandler=(type) =>{\n        const oldCount=this .state.ingredients[type];\n        const updatedCount=oldCount - 1;\n        const updatedIngredients={\n            ...this.state.ingredients\n        }\n        updatedIngredients[type]=updatedCount;\n        const priceAddition=INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceAddition;\n\n        this.setState({totalPrice:newPrice, ingredients:updatedIngredients})\n        this.updatePurchaseState(updatedIngredients)\n    }\n\n    //.......................................\n\n\n    // updatePurchaseState = (ingredients) => {\n    //   console.log(ingredients);\n    //     const sum = Object.keys(ingredients)\n    //       .map(igKey => {\n    //         return ingredients[igKey];\n    //       })\n    //       .reduce((sum, el) => {\n    //         return sum + el;\n    //       }, 0);\n    //       return this.setState({ purchasable: (sum > 0)});\n    //   }\n\n    updatePurchaseState = (ingredients) => {\n      console.log(ingredients);\n        const sum = Object.keys(ingredients)\n          .map(igKey => {\n            return ingredients[igKey];\n          })\n          .reduce((sum, el) => {\n            return sum + el;\n          }, 0);\n          return (sum > 0);\n      }\n    \n      purchaseHandler = () => {\n        // this.setState({\n        //     purchasing: true\n        //   });\n        if(this.props.isAuthenticated){\n          this.setState({\n            purchasing: true\n          });\n        } else {\n          const queryParams = [];\n          for(let i in this.props.ings){\n            queryParams.push(encodeURIComponent(i) + \"=\"+ encodeURIComponent(this.props.ings[i]));\n          }\n\n          const queryString = queryParams.join('&');\n  \n          this.props.onSetAuthRedirectPath(\"/checkout?\" + queryString);\n          this.props.navigate(\"/auth\");\n          //this.props.history.push(\"/auth\");\n        }\n      }\n    \n      purchaseCancelHandler = () => {\n        this.setState({\n          purchasing: false\n        })\n      }\n    \n      purchaseContinueHandler = () => {\n\n        const queryParams = [];\n        for(let i in this.props.ings){\n          queryParams.push(encodeURIComponent(i) + \"=\"+ encodeURIComponent(this.props.ings[i]));\n        }\n\n        const queryString = queryParams.join('&');\n\n        this.props.navigate(\"/checkout/\"+\"?\" + queryString,{ state: { id: 1, name: 'sabaoon' } });\n\n        this.setState({loading:false})\n\n         this.setState({purchasing:false})\n\n         \n      //  const postOrderRequest={\n      //       ingredients : this.state.ingredients,\n      //       price: this.state.price,\n      //       customerName:{\n      //         name:'David Oteng',\n      //         address:{\n      //           street: 'East Legon',\n      //           zipcode: '233',\n      //           country: 'Ghana'\n      //       },\n      //       email:'daveotengo@gmail.com',\n\n      //       },\n      //       deliverymethod:'fastest'\n      //   }\n      //   axios.post('/orders.json',postOrderRequest)\n      //   .then(response=>{\n\n      //     this.setState({loading:false,purchasing:false});\n\n      //     console.log(response);\n      //   }).catch(error=>{\n      //     this.setState({loading:false,purchasing:false});\n\n      //     console.log(\"printing error\");\n      //     console.log(error);\n      //   });\n\n\n\n        //alert(\"you can continue\");\n       // this.props.onInitPurchase();\n        //this.props.history.push('/checkout');\n      }  \n}\n\n//export default withErrorHandler(BurgerBuilder,axios);\n\nfunction WithNavigate(props) {\n  let navigate = useNavigate();\n  const location = useLocation();\n\n  //return <Blog {...props} navigate={navigate} location={location} />\n  return <BurgerBuilder {...props} navigate={navigate} location={location} />\n}\n\n//export default  withErrorHandler(WithNavigate,axios);\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    price: state.burgerBuilder.totalPrice,\n    error: state.burgerBuilder.error,\n    building: state.burgerBuilder.building,\n    isAuthenticated: state.auth.token !== null\n  };\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\n    onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\n    onInitIngredients: () => dispatch(actions.initIngredients()),\n    onInitPurchase: () => dispatch(actions.purchaseInit()),\n    onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\n  };\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(WithNavigate, axios));\n"]},"metadata":{},"sourceType":"module"}