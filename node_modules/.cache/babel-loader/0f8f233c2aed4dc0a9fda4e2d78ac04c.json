{"ast":null,"code":"var _jsxFileName = \"/Users/daveotengo/Desktop/git/react/my-app_a/src/containers/Checkout/Checkout.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary'; //import ContactData from './ContactData/ContactData';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Checkout extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.checkoutCancelledHandler = () => {\n      this.props.history.goBack();\n    };\n\n    this.checkoutContinuedHandler = () => {\n      this.props.history.replace('/checkout/contact-data');\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"component did mount\");\n    console.log(this.props.ings);\n  }\n\n  render() {\n    //let summary = <Route to=\"/\" />\n    let summary = null; // if (this.props.ings) {\n    //let purchasedRedirect = this.props.purchased ? <Route to=\"/\" /> : null;\n\n    summary = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CheckoutSummary, {\n        ingredients: this.props.ings,\n        checkoutCancelled: this.checkoutCancelledHandler,\n        checkoutContinued: this.checkoutContinuedHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this); //}\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: summary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    purchased: state.orders.purchased\n  };\n}; //export default connect(mapStateToProps, null)(Checkout);\n\n\nexport default Checkout;","map":{"version":3,"sources":["/Users/daveotengo/Desktop/git/react/my-app_a/src/containers/Checkout/Checkout.js"],"names":["React","Route","Redirect","connect","CheckoutSummary","Checkout","Component","checkoutCancelledHandler","props","history","goBack","checkoutContinuedHandler","replace","componentDidMount","console","log","ings","render","summary","mapStateToProps","state","burgerBuilder","ingredients","purchased","orders"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,wDAA5B,C,CACA;;;;AAEA,MAAMC,QAAN,SAAuBL,KAAK,CAACM,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SAErCC,wBAFqC,GAEV,MAAM;AAC/B,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,MAAnB;AACD,KAJoC;;AAAA,SAMrCC,wBANqC,GAMV,MAAM;AAC/B,WAAKH,KAAL,CAAWC,OAAX,CAAmBG,OAAnB,CAA2B,wBAA3B;AACD,KARoC;AAAA;;AAUrCC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWQ,IAAvB;AACD;;AAEDC,EAAAA,MAAM,GAAI;AACR;AACA,QAAIC,OAAO,GAAE,IAAb,CAFQ,CAGT;AACG;;AACAA,IAAAA,OAAO,gBACL;AAAA,6BAEE,QAAC,eAAD;AACE,QAAA,WAAW,EAAE,KAAKV,KAAL,CAAWQ,IAD1B;AAEE,QAAA,iBAAiB,EAAE,KAAKT,wBAF1B;AAGE,QAAA,iBAAiB,EAAE,KAAKI;AAH1B;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YADF,CALM,CAmBR;;AACA,wBACE;AAAA,gBACGO;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAxCoC;;AA2CvC,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLJ,IAAAA,IAAI,EAAEI,KAAK,CAACC,aAAN,CAAoBC,WADrB;AAELC,IAAAA,SAAS,EAAEH,KAAK,CAACI,MAAN,CAAaD;AAFnB,GAAP;AAID,CALD,C,CAQA;;;AACA,eAAelB,QAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\n//import ContactData from './ContactData/ContactData';\n\nclass Checkout extends React.Component {\n\n  checkoutCancelledHandler = () => {\n    this.props.history.goBack();\n  }\n\n  checkoutContinuedHandler = () => {\n    this.props.history.replace('/checkout/contact-data');\n  }\n\n  componentDidMount(){\n    console.log(\"component did mount\");\n    console.log(this.props.ings)\n  }\n\n  render () {\n    //let summary = <Route to=\"/\" />\n    let summary =null\n   // if (this.props.ings) {\n      //let purchasedRedirect = this.props.purchased ? <Route to=\"/\" /> : null;\n      summary = (\n        <div>\n          {/* {purchasedRedirect} */}\n          <CheckoutSummary\n            ingredients={this.props.ings}\n            checkoutCancelled={this.checkoutCancelledHandler}\n            checkoutContinued={this.checkoutContinuedHandler}\n            \n            />\n          {/* <Route\n            path={this.props.match.path + '/contact-data'}\n            component={ContactData} /> */}\n        </div>\n      );\n    //}\n    return (\n      <div>\n        {summary}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    purchased: state.orders.purchased\n  }\n};\n\n\n//export default connect(mapStateToProps, null)(Checkout);\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}