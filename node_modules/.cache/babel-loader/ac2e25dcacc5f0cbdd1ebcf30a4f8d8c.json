{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\nexport const purchaseBurgerSuccess = (id, orderData) => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\n    orderId: id,\n    orderData: orderData\n  };\n};\nexport const purchaseBurgerFailure = error => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_FAILURE,\n    error: error\n  };\n};\nexport const purchaseBurgerStart = () => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_START\n  };\n}; // export const purchaseBurger = (orderData, token) => {\n//   return {\n//     type: actionTypes.PURCHASE_BURGER,\n//     orderData: orderData,\n//     token: token\n//   };\n// };\n\nexport const purchaseBurger = (orderData, token) => {\n  return dispatch => {\n    dispatch(purchaseBurgerStart());\n    axios.post('/orders.json?auth=' + token, orderData).then(response => {\n      //this.setState({loading:false,purchasing:false});\n      console.log(response);\n      dispatch(purchaseBurgerSuccess(response.data.name, response.data)); // this.props.navigate('/orders');\n    }).catch(error => {\n      //this.setState({loading:false,purchasing:false});\n      dispatch(purchaseBurgerFailure(error));\n      console.log(\"printing error\");\n      console.log(error);\n    });\n  }; // return {\n  //   type: actionTypes.PURCHASE_BURGER,\n  //   orderData: orderData,\n  //   //token: token\n  // };\n};\nexport const purchaseInit = () => {\n  return {\n    type: actionTypes.PURCHASE_INIT\n  };\n};\nexport const fetchOrdersSuccess = orders => {\n  return {\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\n    orders: orders\n  };\n};\nexport const fetchOrdersFailure = error => {\n  return {\n    type: actionTypes.FETCH_ORDERS_FAILURE,\n    error: error\n  };\n};\nexport const fetchOrdersStart = () => {\n  return {\n    type: actionTypes.FETCH_ORDERS_START\n  };\n};\nexport const fetchOrders = token => {\n  return dispatch => {\n    dispatch(fetchOrdersStart());\n    console.log(\"dispatching orders\");\n    const url = '/orders.json?auth=' + token;\n    console.log(\"logging url\");\n    console.log(url);\n    axios.get(url).then(response => {\n      //this.setState({loading:false});\n      console.log(response);\n      const fetchOrders = [];\n\n      for (let key in response.data) {\n        fetchOrders.push({ ...response.data[key],\n          id: key\n        });\n      }\n\n      console.log(\"printing fetchorders\");\n      console.log(fetchOrders);\n      dispatch(fetchOrdersSuccess(fetchOrders)); //this.setState({orders:fetchOrders,loading:false});\n    }).catch(error => {\n      //this.setState({loading:false});\n      console.log(\"logging error from response\");\n      console.log(error);\n      dispatch(fetchOrdersFailure(error));\n    });\n  }; // return {\n  //   type: actionTypes.FETCH_ORDERS,\n  //   // token: token,\n  //   // userId: userId\n  // }\n}; // export const fetchOrders = (token, userId) => {\n//   return {\n//     type: actionTypes.FETCH_ORDERS,\n//     token: token,\n//     userId: userId\n//   }\n// };","map":{"version":3,"sources":["/Users/daveotengo/Desktop/git/react/my-app_a/src/store/actions/order_actions.js"],"names":["actionTypes","axios","purchaseBurgerSuccess","id","orderData","type","PURCHASE_BURGER_SUCCESS","orderId","purchaseBurgerFailure","error","PURCHASE_BURGER_FAILURE","purchaseBurgerStart","PURCHASE_BURGER_START","purchaseBurger","token","dispatch","post","then","response","console","log","data","name","catch","purchaseInit","PURCHASE_INIT","fetchOrdersSuccess","orders","FETCH_ORDERS_SUCCESS","fetchOrdersFailure","FETCH_ORDERS_FAILURE","fetchOrdersStart","FETCH_ORDERS_START","fetchOrders","url","get","key","push"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\n    orderId: id,\n    orderData: orderData\n  };\n};\n\nexport const purchaseBurgerFailure = (error) => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_FAILURE,\n    error: error\n  };\n};\n\nexport const purchaseBurgerStart = () => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_START\n  }\n};\n\n// export const purchaseBurger = (orderData, token) => {\n//   return {\n//     type: actionTypes.PURCHASE_BURGER,\n//     orderData: orderData,\n//     token: token\n//   };\n// };\n\nexport const purchaseBurger = (orderData,token) => {\n\n  return dispatch => {\n    dispatch(purchaseBurgerStart());\n\n    axios.post('/orders.json?auth='+token,orderData)\n    .then(response=>{\n\n      //this.setState({loading:false,purchasing:false});\n      console.log(response);\n\n      dispatch(purchaseBurgerSuccess(response.data.name, response.data))\n\n     // this.props.navigate('/orders');\n\n    }).catch(error=>{\n      //this.setState({loading:false,purchasing:false});\n      dispatch(purchaseBurgerFailure(error))\n      console.log(\"printing error\");\n      console.log(error);\n    });\n\n  }\n  // return {\n  //   type: actionTypes.PURCHASE_BURGER,\n  //   orderData: orderData,\n  //   //token: token\n  // };\n};\n\nexport const purchaseInit = () => {\n  return {\n    type: actionTypes.PURCHASE_INIT\n  };\n};\n\nexport const fetchOrdersSuccess = (orders) => {\n  return {\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\n    orders: orders\n  };\n};\n\nexport const fetchOrdersFailure = (error) => {\n  return {\n    type: actionTypes.FETCH_ORDERS_FAILURE,\n    error: error\n  };\n};\n\nexport const fetchOrdersStart = () => {\n  return {\n    type: actionTypes.FETCH_ORDERS_START\n  };\n};\n\n\nexport const fetchOrders = (token) => {\n  return dispatch => {\n\n      dispatch(fetchOrdersStart());\n\n      console.log(\"dispatching orders\")\n\n      const url ='/orders.json?auth='+token;\n\n      console.log(\"logging url\");\n\n      console.log(url);\n      \n      axios.get(url).then(response=>{\n        //this.setState({loading:false});\n    \n        console.log(response);\n    \n        const fetchOrders = [];\n    \n        for (let key in response.data){\n    \n          fetchOrders.push({\n            ...response.data[key],\n            id : key\n          })\n    \n        }\n    \n        console.log(\"printing fetchorders\")\n    \n        console.log(fetchOrders);\n    \n        dispatch(fetchOrdersSuccess(fetchOrders));\n        //this.setState({orders:fetchOrders,loading:false});\n        \n      }).catch(error=>{\n    \n        //this.setState({loading:false});\n        console.log(\"logging error from response\")\n        \n        console.log(error)\n\n    \n        dispatch(fetchOrdersFailure(error));\n\n    \n      });\n\n  }\n  // return {\n  //   type: actionTypes.FETCH_ORDERS,\n  //   // token: token,\n  //   // userId: userId\n  // }\n};\n\n// export const fetchOrders = (token, userId) => {\n//   return {\n//     type: actionTypes.FETCH_ORDERS,\n//     token: token,\n//     userId: userId\n//   }\n// };\n"]},"metadata":{},"sourceType":"module"}