{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes.js';\nimport { updateObject } from '../utility.js'; // GLOBAL CONSTANTS IN CAPITALS\n\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  bacon: 0.7,\n  meat: 1.3\n};\nconst initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false,\n  building: false,\n  purchasable: false\n};\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      const updatedIngredient = {\n        [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n      };\n      const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n      const updatedState = {\n        ingredients: updatedIngredients,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        building: true\n      };\n      return updateObject(state, updatedState);\n\n    case actionTypes.REMOVE_INGREDIENT:\n      const updatedIng = {\n        [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n      };\n      const updatedIngs = updateObject(state.ingredients, updatedIng);\n      const updatedSt = {\n        ingredients: updatedIngs,\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n        building: true\n      };\n      return updateObject(state, updatedSt);\n\n    case actionTypes.SET_INGREDIENTS:\n      return updateObject(state, {\n        ingredients: {\n          salad: action.ingredients.salad,\n          meat: action.ingredients.meat,\n          bacon: action.ingredients.bacon,\n          cheese: action.ingredients.cheese\n        },\n        totalPrice: 4,\n        error: false,\n        building: false\n      });\n\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return updateObject(state, {\n        error: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/daveotengo/Desktop/git/react/my-app_a/src/store/reducers/burger_reducer.js"],"names":["actionTypes","updateObject","INGREDIENT_PRICES","salad","cheese","bacon","meat","initialState","ingredients","totalPrice","error","building","purchasable","reducer","state","action","type","ADD_INGREDIENT","updatedIngredient","ingredientName","updatedIngredients","updatedState","REMOVE_INGREDIENT","updatedIng","updatedIngs","updatedSt","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,2BAA7B;AACA,SAASC,YAAT,QAA4B,eAA5B,C,CAEA;;AACA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,KAAK,EAAE,GADiB;AAExBC,EAAAA,MAAM,EAAE,GAFgB;AAGxBC,EAAAA,KAAK,EAAE,GAHiB;AAIxBC,EAAAA,IAAI,EAAE;AAJkB,CAA1B;AAOA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,IADM;AAEnBC,EAAAA,UAAU,EAAE,CAFO;AAGnBC,EAAAA,KAAK,EAAE,KAHY;AAInBC,EAAAA,QAAQ,EAAE,KAJS;AAKnBC,EAAAA,WAAW,EAAE;AALM,CAArB;;AAQA,MAAMC,OAAO,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKhB,WAAW,CAACiB,cAAjB;AACE,YAAMC,iBAAiB,GAAG;AAAC,SAACH,MAAM,CAACI,cAAR,GAAyBL,KAAK,CAACN,WAAN,CAAkBO,MAAM,CAACI,cAAzB,IAA2C;AAArE,OAA1B;AACA,YAAMC,kBAAkB,GAAGnB,YAAY,CAACa,KAAK,CAACN,WAAP,EAAoBU,iBAApB,CAAvC;AACA,YAAMG,YAAY,GAAG;AACnBb,QAAAA,WAAW,EAAEY,kBADM;AAEnBX,QAAAA,UAAU,EAAGK,KAAK,CAACL,UAAN,GAAmBP,iBAAiB,CAACa,MAAM,CAACI,cAAR,CAF9B;AAGnBR,QAAAA,QAAQ,EAAE;AAHS,OAArB;AAKE,aAAOV,YAAY,CAACa,KAAD,EAAQO,YAAR,CAAnB;;AACJ,SAAKrB,WAAW,CAACsB,iBAAjB;AACE,YAAMC,UAAU,GAAE;AAAC,SAACR,MAAM,CAACI,cAAR,GAAyBL,KAAK,CAACN,WAAN,CAAkBO,MAAM,CAACI,cAAzB,IAA2C;AAArE,OAAlB;AACA,YAAMK,WAAW,GAAGvB,YAAY,CAACa,KAAK,CAACN,WAAP,EAAoBe,UAApB,CAAhC;AACA,YAAME,SAAS,GAAE;AACfjB,QAAAA,WAAW,EAAEgB,WADE;AAEff,QAAAA,UAAU,EAAGK,KAAK,CAACL,UAAN,GAAmBP,iBAAiB,CAACa,MAAM,CAACI,cAAR,CAFlC;AAGfR,QAAAA,QAAQ,EAAE;AAHK,OAAjB;AAKE,aAAOV,YAAY,CAACa,KAAD,EAAQW,SAAR,CAAnB;;AACJ,SAAKzB,WAAW,CAAC0B,eAAjB;AACE,aAAOzB,YAAY,CAACa,KAAD,EAAQ;AACzBN,QAAAA,WAAW,EAAE;AACXL,UAAAA,KAAK,EAAEY,MAAM,CAACP,WAAP,CAAmBL,KADf;AAEXG,UAAAA,IAAI,EAAES,MAAM,CAACP,WAAP,CAAmBF,IAFd;AAGXD,UAAAA,KAAK,EAAEU,MAAM,CAACP,WAAP,CAAmBH,KAHf;AAIXD,UAAAA,MAAM,EAAEW,MAAM,CAACP,WAAP,CAAmBJ;AAJhB,SADY;AAOzBK,QAAAA,UAAU,EAAE,CAPa;AAQzBC,QAAAA,KAAK,EAAE,KARkB;AASzBC,QAAAA,QAAQ,EAAE;AATe,OAAR,CAAnB;;AAWF,SAAKX,WAAW,CAAC2B,wBAAjB;AACE,aAAO1B,YAAY,CAACa,KAAD,EAAQ;AACzBJ,QAAAA,KAAK,EAAE;AADkB,OAAR,CAAnB;;AAGF;AACE,aAAOI,KAAP;AApCJ;AAsCD,CAvCD;;AAyCA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes.js';\nimport { updateObject} from '../utility.js';\n\n// GLOBAL CONSTANTS IN CAPITALS\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  bacon: 0.7,\n  meat: 1.3\n};\n\nconst initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false,\n  building: false,\n  purchasable: false,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      const updatedIngredient = {[action.ingredientName]: state.ingredients[action.ingredientName] + 1};\n      const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n      const updatedState = {\n        ingredients: updatedIngredients,\n        totalPrice:  state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        building: true,\n        }\n        return updateObject(state, updatedState);\n    case actionTypes.REMOVE_INGREDIENT:\n      const updatedIng= {[action.ingredientName]: state.ingredients[action.ingredientName] - 1};\n      const updatedIngs = updateObject(state.ingredients, updatedIng);\n      const updatedSt= {\n        ingredients: updatedIngs,\n        totalPrice:  state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n        building: true,\n        }\n        return updateObject(state, updatedSt);\n    case actionTypes.SET_INGREDIENTS:\n      return updateObject(state, {\n        ingredients: {\n          salad: action.ingredients.salad,\n          meat: action.ingredients.meat,\n          bacon: action.ingredients.bacon,\n          cheese: action.ingredients.cheese\n        },\n        totalPrice: 4,\n        error: false,\n        building: false,\n      });\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return updateObject(state, {\n        error: true\n      });\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}