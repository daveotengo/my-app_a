{"ast":null,"code":"var _jsxFileName = \"/Users/daveotengo/Desktop/git/react/my-app_a/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BulidControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport axios from '../../axios-orders';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class BurgerBuilder extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      purchasing: false\n    };\n\n    this.updatePurchaseState = ingredients => {\n      const sum = Object.keys(ingredients).map(igKey => {\n        return ingredients[igKey];\n      }).reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n      return sum > 0;\n    };\n\n    this.purchaseHandler = () => {\n      if (this.props.isAuthenticated) {\n        this.setState({\n          purchasing: true\n        });\n      } else {\n        this.props.onSetAuthRedirectPath(\"/checkout\");\n        this.props.history.push(\"/auth\");\n      }\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      this.props.onInitPurchase();\n      this.props.history.push('/checkout');\n    };\n  }\n\n  componentDidMount() {\n    this.props.onInitIngredients();\n  }\n\n  render() {\n    const disabledInfo = { ...this.props.ings\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = this.props.error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Ingredients didn't load\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 37\n    }, this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 70\n    }, this);\n\n    if (this.props.ings) {\n      burger = /*#__PURE__*/_jsxDEV(Aux, {\n        children: [/*#__PURE__*/_jsxDEV(Burger, {\n          ingredients: this.props.ings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"BuildControls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this);\n      orderSummary = /*#__PURE__*/_jsxDEV(OrderSummary, {\n        purchaseCancelled: this.purchaseCancelHandler,\n        purchaseContinued: this.purchaseContinueHandler,\n        ingredients: this.props.ings,\n        price: this.props.price.toFixed(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (this.state.loading) {\n      orderSummary = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 22\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.purchasing,\n        modalClosed: this.purchaseCancelHandler,\n        children: orderSummary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), burger]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    price: state.burgerBuilder.totalPrice,\n    error: state.burgerBuilder.error,\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingName => dispatch(actions.addIngredient(ingName)),\n    onIngredientRemoved: ingName => dispatch(actions.removeIngredient(ingName)),\n    onInitIngredients: () => dispatch(actions.initIngredients()),\n    onInitPurchase: () => dispatch(actions.purchaseInit()),\n    onSetAuthRedirectPath: path => dispatch(actions.setAuthRedirectPath(path))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["/Users/daveotengo/Desktop/git/react/my-app_a/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","connect","Aux","Burger","BuildControls","Modal","Spinner","OrderSummary","withErrorHandler","actions","axios","BurgerBuilder","Component","state","purchasing","updatePurchaseState","ingredients","sum","Object","keys","map","igKey","reduce","el","purchaseHandler","props","isAuthenticated","setState","onSetAuthRedirectPath","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","componentDidMount","onInitIngredients","render","disabledInfo","ings","key","orderSummary","burger","error","price","toFixed","loading","mapStateToProps","burgerBuilder","totalPrice","auth","token","mapDispatchToProps","dispatch","onIngredientAdded","ingName","addIngredient","onIngredientRemoved","removeIngredient","initIngredients","purchaseInit","path","setAuthRedirectPath"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BulidControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport axios from '../../axios-orders';\n\n\nexport class BurgerBuilder extends React.Component {\n  //modern alternative to constructor\n  state = {\n    purchasing: false,\n  }\n  componentDidMount() {\n    this.props.onInitIngredients();\n  }\n\n  updatePurchaseState = (ingredients) => {\n    const sum = Object.keys(ingredients)\n      .map(igKey => {\n        return ingredients[igKey];\n      })\n      .reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n      return sum > 0;\n  }\n\n  purchaseHandler = () => {\n    if(this.props.isAuthenticated){\n      this.setState({\n        purchasing: true\n      });\n    } else {\n      this.props.onSetAuthRedirectPath(\"/checkout\");\n      this.props.history.push(\"/auth\");\n    }\n  }\n\n  purchaseCancelHandler = () => {\n    this.setState({\n      purchasing: false\n    })\n  }\n\n  purchaseContinueHandler = () => {\n    this.props.onInitPurchase();\n    this.props.history.push('/checkout');\n  }\n\n  render (){\n    const disabledInfo = {\n      ...this.props.ings\n    };\n    for (let key in disabledInfo){\n        disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n    let orderSummary = null;\n    let burger = this.props.error ? <p>Ingredients didn't load</p> : <Spinner />;\n    if(this.props.ings){\n      burger = (\n        <Aux>\n          <Burger ingredients={this.props.ings}/>\n          <div >BuildControls</div>\n          {/* <BuildControls\n            ingredientAdded={this.props.onIngredientAdded}\n            ingredientRemoved={this.props.onIngredientRemoved}\n            disabled={disabledInfo}\n            purchasable={this.updatePurchaseState(this.props.ings)}\n            ordered={this.purchaseHandler}\n            price={this.props.price}\n            isAuthenticated={this.props.isAuthenticated} /> */}\n          </Aux>\n      );\n      orderSummary =  (\n        <OrderSummary\n              purchaseCancelled={this.purchaseCancelHandler}\n              purchaseContinued={this.purchaseContinueHandler}\n              ingredients={this.props.ings}\n              price={this.props.price.toFixed(2)}/>\n      );\n    }\n    if(this.state.loading){\n      orderSummary = <Spinner />;\n    }\n    return (\n      <Aux>\n        <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n          {orderSummary}\n        </Modal>\n        {burger}\n      </Aux>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    price: state.burgerBuilder.totalPrice,\n    error: state.burgerBuilder.error,\n    isAuthenticated: state.auth.token !== null\n  };\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\n    onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\n    onInitIngredients: () => dispatch(actions.initIngredients()),\n    onInitPurchase: () => dispatch(actions.purchaseInit()),\n    onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\n  };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));"]},"metadata":{},"sourceType":"module"}