{"ast":null,"code":"var _jsxFileName = \"/Users/daveotengo/Desktop/git/react/my-app_a/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport { Component } from \"react\";\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BulidControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      // ingredients:null,\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchasing: false,\n      purchasable: false,\n      loading: false\n    };\n\n    this.postIngredientHandler = () => {\n      const postIngredientReq = {\n        salad: 2,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      };\n      axios.post('/ingredients.json', postIngredientReq).then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.updatePurchaseState = ingredients => {\n      console.log(ingredients);\n      const sum = Object.keys(ingredients).map(igKey => {\n        return ingredients[igKey];\n      }).reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n      return this.setState({\n        purchasable: sum > 0\n      });\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      }); // if(this.props.isAuthenticated){\n      //   this.setState({\n      //     purchasing: true\n      //   });\n      // } else {\n      //   this.props.onSetAuthRedirectPath(\"/checkout\");\n      //   this.props.history.push(\"/auth\");\n      // }\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      this.setState({\n        loading: true\n      });\n      const postOrderRequest = {\n        ingredients: this.state.ingredients,\n        price: this.state.price,\n        customerName: {\n          name: 'David Oteng',\n          address: {\n            street: 'East Legon',\n            zipcode: '233',\n            country: 'Ghana'\n          },\n          email: 'daveotengo@gmail.com'\n        },\n        deliverymethod: 'fastest'\n      };\n      axios.post('/orders.json', postOrderRequest).then(response => {\n        this.setState({\n          loading: false,\n          purchasing: false\n        });\n        console.log(response);\n      }).catch(error => {\n        this.setState({\n          loading: false,\n          purchasing: false\n        });\n        console.log(\"printing error\");\n        console.log(error);\n      }); //alert(\"you can continue\");\n      // this.props.onInitPurchase();\n      //this.props.history.push('/checkout');\n    };\n  }\n\n  componentDidUpdate() {\n    console.log(\"componenet did update\");\n  }\n\n  componentDidMount() {\n    console.log(\"componenet did mount\");\n    this.setState({\n      loading: true\n    });\n    axios.get('/ingredients.json').then(response => {\n      this.setState({\n        loading: false\n      });\n      console.log(response);\n      this.setState({\n        ingredients: response.data\n      });\n    }).catch(error => {\n      this.setState({\n        loading: false\n      });\n      console.log(error);\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let burger = null;\n    let orderSummary = null;\n\n    if (this.state.loading) {\n      orderSummary = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 26\n      }, this);\n    } else {\n      orderSummary = /*#__PURE__*/_jsxDEV(OrderSummary, {\n        ingredients: this.state.ingredients,\n        purchaseCancelled: this.purchaseCancelHandler,\n        purchaseContinued: this.purchaseContinueHandler,\n        price: this.state.totalPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this);\n    }\n\n    if (this.state.loading) {\n      burger = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 20\n      }, this);\n    } else {\n      burger = /*#__PURE__*/_jsxDEV(Aux, {\n        children: [/*#__PURE__*/_jsxDEV(Burger, {\n          ingredients: this.state.ingredients\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(BuildControls, {\n          ingredientAdded: this.addIngredientHandler,\n          ingredientRemoved: this.removeIngredientHandler,\n          disabled: disabledInfo,\n          price: this.state.totalPrice,\n          purchasable: this.state.purchasable,\n          ordered: this.purchaseHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.purchasing,\n        modalClosed: this.purchaseCancelHandler,\n        children: orderSummary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this), burger]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withErrorHandler(BurgerBuilder, axios);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/daveotengo/Desktop/git/react/my-app_a/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["Component","Aux","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","withErrorHandler","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasing","purchasable","loading","postIngredientHandler","postIngredientReq","post","then","response","console","log","catch","error","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","sum","Object","keys","map","igKey","reduce","el","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","postOrderRequest","price","customerName","name","address","street","zipcode","country","email","deliverymethod","componentDidUpdate","componentDidMount","get","data","render","disabledInfo","key","burger","orderSummary"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,aAAP,MAA0B,qDAA1B;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,YAAP,MAAyB,mDAAzB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;;AAEA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAG,GADc;AAEtBC,EAAAA,MAAM,EAAG,GAFa;AAGtBC,EAAAA,IAAI,EAAG,GAHe;AAItBC,EAAAA,KAAK,EAAG;AAJc,CAA1B;;AAOA,MAAMC,aAAN,SAA4Bd,SAA5B,CAAqC;AAAA;AAAA;AAAA,SAIjCe,KAJiC,GAIzB;AACL;AAECC,MAAAA,WAAW,EAAC;AACVN,QAAAA,KAAK,EAAC,CADI;AAEVG,QAAAA,KAAK,EAAC,CAFI;AAGVF,QAAAA,MAAM,EAAC,CAHG;AAIVC,QAAAA,IAAI,EAAC;AAJK,OAHR;AAUJK,MAAAA,UAAU,EAAE,CAVR;AAYJC,MAAAA,UAAU,EAAE,KAZR;AAcJC,MAAAA,WAAW,EAAC,KAdR;AAeJC,MAAAA,OAAO,EAAE;AAfL,KAJyB;;AAAA,SAkDhCC,qBAlDgC,GAkDV,MAAI;AAExB,YAAMC,iBAAiB,GAAG;AACzBZ,QAAAA,KAAK,EAAC,CADmB;AAEzBG,QAAAA,KAAK,EAAC,CAFmB;AAGzBF,QAAAA,MAAM,EAAC,CAHkB;AAIzBC,QAAAA,IAAI,EAAC;AAJoB,OAA1B;AAQAN,MAAAA,KAAK,CAACiB,IAAN,CAAW,mBAAX,EAA+BD,iBAA/B,EACCE,IADD,CACMC,QAAQ,IAAE;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,OAHD,EAGGG,KAHH,CAGSC,KAAK,IAAE;AACdH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,OALD;AAMD,KAlE+B;;AAAA,SA8HjCC,oBA9HiC,GA8HXC,IAAD,IAAS;AAC1B,YAAMC,QAAQ,GAAC,KAAKjB,KAAL,CAAWC,WAAX,CAAuBe,IAAvB,CAAf;AACA,YAAME,YAAY,GAACD,QAAQ,GAAG,CAA9B;AACA,YAAME,kBAAkB,GAAC,EACrB,GAAG,KAAKnB,KAAL,CAAWC;AADO,OAAzB;AAGAkB,MAAAA,kBAAkB,CAACH,IAAD,CAAlB,GAAyBE,YAAzB;AACA,YAAME,aAAa,GAAC1B,iBAAiB,CAACsB,IAAD,CAArC;AACA,YAAMK,QAAQ,GAAG,KAAKrB,KAAL,CAAWE,UAA5B;AACA,YAAMoB,QAAQ,GAAGD,QAAQ,GAAGD,aAA5B;AAEA,WAAKG,QAAL,CAAc;AAACrB,QAAAA,UAAU,EAACoB,QAAZ;AAAsBrB,QAAAA,WAAW,EAACkB;AAAlC,OAAd;AACA,WAAKK,mBAAL,CAAyBL,kBAAzB;AACH,KA3IgC;;AAAA,SA6IjCM,uBA7IiC,GA6IRT,IAAD,IAAS;AAC7B,YAAMC,QAAQ,GAAC,KAAMjB,KAAN,CAAYC,WAAZ,CAAwBe,IAAxB,CAAf;AACA,YAAME,YAAY,GAACD,QAAQ,GAAG,CAA9B;AACA,YAAME,kBAAkB,GAAC,EACrB,GAAG,KAAKnB,KAAL,CAAWC;AADO,OAAzB;AAGAkB,MAAAA,kBAAkB,CAACH,IAAD,CAAlB,GAAyBE,YAAzB;AACA,YAAME,aAAa,GAAC1B,iBAAiB,CAACsB,IAAD,CAArC;AACA,YAAMK,QAAQ,GAAG,KAAKrB,KAAL,CAAWE,UAA5B;AACA,YAAMoB,QAAQ,GAAGD,QAAQ,GAAGD,aAA5B;AAEA,WAAKG,QAAL,CAAc;AAACrB,QAAAA,UAAU,EAACoB,QAAZ;AAAsBrB,QAAAA,WAAW,EAACkB;AAAlC,OAAd;AACA,WAAKK,mBAAL,CAAyBL,kBAAzB;AACH,KA1JgC;;AAAA,SA+JjCK,mBA/JiC,GA+JVvB,WAAD,IAAiB;AACrCU,MAAAA,OAAO,CAACC,GAAR,CAAYX,WAAZ;AACE,YAAMyB,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAY3B,WAAZ,EACT4B,GADS,CACLC,KAAK,IAAI;AACZ,eAAO7B,WAAW,CAAC6B,KAAD,CAAlB;AACD,OAHS,EAITC,MAJS,CAIF,CAACL,GAAD,EAAMM,EAAN,KAAa;AACnB,eAAON,GAAG,GAAGM,EAAb;AACD,OANS,EAMP,CANO,CAAZ;AAOE,aAAO,KAAKT,QAAL,CAAc;AAAEnB,QAAAA,WAAW,EAAGsB,GAAG,GAAG;AAAtB,OAAd,CAAP;AACH,KAzK8B;;AAAA,SA2K/BO,eA3K+B,GA2Kb,MAAM;AACtB,WAAKV,QAAL,CAAc;AACVpB,QAAAA,UAAU,EAAE;AADF,OAAd,EADsB,CAItB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KAvL8B;;AAAA,SAyL/B+B,qBAzL+B,GAyLP,MAAM;AAC5B,WAAKX,QAAL,CAAc;AACZpB,QAAAA,UAAU,EAAE;AADA,OAAd;AAGD,KA7L8B;;AAAA,SA+L/BgC,uBA/L+B,GA+LL,MAAM;AAC9B,WAAKZ,QAAL,CAAc;AAAClB,QAAAA,OAAO,EAAC;AAAT,OAAd;AACD,YAAM+B,gBAAgB,GAAC;AAClBnC,QAAAA,WAAW,EAAG,KAAKD,KAAL,CAAWC,WADP;AAElBoC,QAAAA,KAAK,EAAE,KAAKrC,KAAL,CAAWqC,KAFA;AAGlBC,QAAAA,YAAY,EAAC;AACXC,UAAAA,IAAI,EAAC,aADM;AAEXC,UAAAA,OAAO,EAAC;AACNC,YAAAA,MAAM,EAAE,YADF;AAENC,YAAAA,OAAO,EAAE,KAFH;AAGNC,YAAAA,OAAO,EAAE;AAHH,WAFG;AAObC,UAAAA,KAAK,EAAC;AAPO,SAHK;AAalBC,QAAAA,cAAc,EAAC;AAbG,OAAvB;AAeCtD,MAAAA,KAAK,CAACiB,IAAN,CAAW,cAAX,EAA0B4B,gBAA1B,EACC3B,IADD,CACMC,QAAQ,IAAE;AAEd,aAAKa,QAAL,CAAc;AAAClB,UAAAA,OAAO,EAAC,KAAT;AAAeF,UAAAA,UAAU,EAAC;AAA1B,SAAd;AAEAQ,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,OAND,EAMGG,KANH,CAMSC,KAAK,IAAE;AACd,aAAKS,QAAL,CAAc;AAAClB,UAAAA,OAAO,EAAC,KAAT;AAAeF,UAAAA,UAAU,EAAC;AAA1B,SAAd;AAEAQ,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,OAXD,EAjB8B,CA6B9B;AACD;AACC;AACD,KA/N8B;AAAA;;AAsBjCgC,EAAAA,kBAAkB,GAAE;AAClBnC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AAED;;AAEDmC,EAAAA,iBAAiB,GAAE;AAEjBpC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AAEA,SAAKW,QAAL,CAAc;AAAClB,MAAAA,OAAO,EAAC;AAAT,KAAd;AAEAd,IAAAA,KAAK,CAACyD,GAAN,CAAU,mBAAV,EAA+BvC,IAA/B,CAAoCC,QAAQ,IAAE;AAC5C,WAAKa,QAAL,CAAc;AAAClB,QAAAA,OAAO,EAAC;AAAT,OAAd;AAEAM,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEA,WAAKa,QAAL,CAAc;AAACtB,QAAAA,WAAW,EAACS,QAAQ,CAACuC;AAAtB,OAAd;AAED,KAPD,EAOGpC,KAPH,CAOSC,KAAK,IAAE;AACd,WAAKS,QAAL,CAAc;AAAClB,QAAAA,OAAO,EAAC;AAAT,OAAd;AAGAM,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AAED,KAbD;AAeA;;AAoBFoC,EAAAA,MAAM,GAAI;AAEN,UAAMC,YAAY,GAAC,EACf,GAAG,KAAKnD,KAAL,CAAWC;AADC,KAAnB;;AAIA,SAAK,IAAImD,GAAT,IAAgBD,YAAhB,EAA6B;AACzBA,MAAAA,YAAY,CAACC,GAAD,CAAZ,GAAoBD,YAAY,CAACC,GAAD,CAAZ,IAAoB,CAAxC;AACH;;AAED,QAAIC,MAAM,GAAG,IAAb;AACA,QAAIC,YAAY,GAAC,IAAjB;;AACA,QAAG,KAAKtD,KAAL,CAAWK,OAAd,EAAuB;AACrBiD,MAAAA,YAAY,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAf;AACD,KAFD,MAEK;AAEHA,MAAAA,YAAY,gBAEV,QAAC,YAAD;AAAc,QAAA,WAAW,EAAE,KAAKtD,KAAL,CAAWC,WAAtC;AACG,QAAA,iBAAiB,EAAE,KAAKiC,qBAD3B;AAEI,QAAA,iBAAiB,EAAE,KAAKC,uBAF5B;AAGI,QAAA,KAAK,EAAE,KAAKnC,KAAL,CAAWE;AAHtB;AAAA;AAAA;AAAA;AAAA,cAFF;AAUD;;AAED,QAAG,KAAKF,KAAL,CAAWK,OAAd,EAAuB;AACrBgD,MAAAA,MAAM,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAT;AAED,KAHD,MAGK;AACHA,MAAAA,MAAM,gBACJ,QAAC,GAAD;AAAA,gCACA,QAAC,MAAD;AAAQ,UAAA,WAAW,EAAE,KAAKrD,KAAL,CAAWC;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,aAAD;AACI,UAAA,eAAe,EAAI,KAAKc,oBAD5B;AAEI,UAAA,iBAAiB,EAAE,KAAKU,uBAF5B;AAGI,UAAA,QAAQ,EAAE0B,YAHd;AAG4B,UAAA,KAAK,EAAE,KAAKnD,KAAL,CAAWE,UAH9C;AAII,UAAA,WAAW,EAAE,KAAKF,KAAL,CAAWI,WAJ5B;AAKI,UAAA,OAAO,EAAI,KAAK6B;AALpB;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAYD;;AAED,wBAEI,QAAC,GAAD;AAAA,8BACA,QAAC,KAAD;AAAO,QAAA,IAAI,EAAE,KAAKjC,KAAL,CAAWG,UAAxB;AAAqC,QAAA,WAAW,EAAE,KAAK+B,qBAAvD;AAAA,kBACKoB;AADL;AAAA;AAAA;AAAA;AAAA,cADA,EAIKD,MAJL;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AASH;;AA3HgC;;AAkOrC,oBAAe5D,gBAAgB,CAACM,aAAD,EAAeR,KAAf,CAA/B","sourcesContent":["import { Component } from \"react\";\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BulidControls/BuildControls'\nimport Modal from '../../components/UI/Modal/Modal'\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\nimport axios from '../../axios-orders'\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\n\nconst INGREDIENT_PRICES = {\n    salad : 0.5,\n    cheese : 0.4,\n    meat : 1.3,\n    bacon : 0.7\n};\n\nclass BurgerBuilder extends Component{\n\n   \n\n    state = {\n       // ingredients:null,\n\n        ingredients:{\n          salad:0,\n          bacon:0,\n          cheese:0,\n          meat:0\n      },\n\n        totalPrice: 4,\n\n        purchasing: false,\n\n        purchasable:false,\n        loading: false,\n    }\n\n    componentDidUpdate(){\n      console.log(\"componenet did update\")\n      \n    }\n\n    componentDidMount(){\n\n      console.log(\"componenet did mount\")\n    \n      this.setState({loading:true});\n\n      axios.get('/ingredients.json').then(response=>{\n        this.setState({loading:false});\n\n        console.log(response);\n\n        this.setState({ingredients:response.data});\n        \n      }).catch(error=>{\n        this.setState({loading:false});\n\n\n        console.log(error)\n\n      })\n  \n     }\n\n     postIngredientHandler=()=>{\n\n       const postIngredientReq = {\n        salad:2,\n        bacon:0,\n        cheese:0,\n        meat:0\n\n       }\n\n       axios.post('/ingredients.json',postIngredientReq)\n       .then(response=>{\n         console.log(response);\n       }).catch(error=>{\n         console.log(error);\n       });\n     }\n\n    render () {\n\n        const disabledInfo={\n            ...this.state.ingredients\n        }\n\n        for (let key in disabledInfo){\n            disabledInfo[key] = disabledInfo[key] <=0\n        }\n\n        let burger = null\n        let orderSummary=null;\n        if(this.state.loading ){\n          orderSummary = <Spinner /> \n        }else{\n\n          orderSummary = (\n          \n            <OrderSummary ingredients={this.state.ingredients}\n               purchaseCancelled={this.purchaseCancelHandler} \n                purchaseContinued={this.purchaseContinueHandler} \n                price={this.state.totalPrice}\n                >\n            </OrderSummary>\n         \n          )          \n        }\n\n        if(this.state.loading ){\n          burger = <Spinner /> \n\n        }else{\n          burger = (\n            <Aux>\n            <Burger ingredients={this.state.ingredients} />\n            <BuildControls \n                ingredientAdded = {this.addIngredientHandler} \n                ingredientRemoved={this.removeIngredientHandler} \n                disabled={disabledInfo} price={this.state.totalPrice}\n                purchasable={this.state.purchasable}\n                ordered = {this.purchaseHandler}\n             />\n             </Aux>\n          );\n        }\n         \n        return (\n         \n            <Aux>\n            <Modal show={this.state.purchasing}  modalClosed={this.purchaseCancelHandler}>\n                {orderSummary}\n                  </Modal>\n                {burger}\n            </Aux>\n        );\n    }\n\n\n    addIngredientHandler=(type) =>{\n        const oldCount=this.state.ingredients[type];\n        const updatedCount=oldCount + 1;\n        const updatedIngredients={\n            ...this.state.ingredients\n        }\n        updatedIngredients[type]=updatedCount;\n        const priceAddition=INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n\n        this.setState({totalPrice:newPrice, ingredients:updatedIngredients})\n        this.updatePurchaseState(updatedIngredients)\n    }\n\n    removeIngredientHandler=(type) =>{\n        const oldCount=this .state.ingredients[type];\n        const updatedCount=oldCount - 1;\n        const updatedIngredients={\n            ...this.state.ingredients\n        }\n        updatedIngredients[type]=updatedCount;\n        const priceAddition=INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceAddition;\n\n        this.setState({totalPrice:newPrice, ingredients:updatedIngredients})\n        this.updatePurchaseState(updatedIngredients)\n    }\n\n    //.......................................\n\n\n    updatePurchaseState = (ingredients) => {\n      console.log(ingredients);\n        const sum = Object.keys(ingredients)\n          .map(igKey => {\n            return ingredients[igKey];\n          })\n          .reduce((sum, el) => {\n            return sum + el;\n          }, 0);\n          return this.setState({ purchasable: (sum > 0)});\n      }\n    \n      purchaseHandler = () => {\n        this.setState({\n            purchasing: true\n          });\n        // if(this.props.isAuthenticated){\n        //   this.setState({\n        //     purchasing: true\n        //   });\n        // } else {\n        //   this.props.onSetAuthRedirectPath(\"/checkout\");\n        //   this.props.history.push(\"/auth\");\n        // }\n      }\n    \n      purchaseCancelHandler = () => {\n        this.setState({\n          purchasing: false\n        })\n      }\n    \n      purchaseContinueHandler = () => {\n        this.setState({loading:true})\n       const postOrderRequest={\n            ingredients : this.state.ingredients,\n            price: this.state.price,\n            customerName:{\n              name:'David Oteng',\n              address:{\n                street: 'East Legon',\n                zipcode: '233',\n                country: 'Ghana'\n            },\n            email:'daveotengo@gmail.com',\n\n            },\n            deliverymethod:'fastest'\n        }\n        axios.post('/orders.json',postOrderRequest)\n        .then(response=>{\n\n          this.setState({loading:false,purchasing:false});\n\n          console.log(response);\n        }).catch(error=>{\n          this.setState({loading:false,purchasing:false});\n\n          console.log(\"printing error\");\n          console.log(error);\n        });\n        //alert(\"you can continue\");\n       // this.props.onInitPurchase();\n        //this.props.history.push('/checkout');\n      }  \n}\n\nexport default withErrorHandler(BurgerBuilder,axios);\n"]},"metadata":{},"sourceType":"module"}