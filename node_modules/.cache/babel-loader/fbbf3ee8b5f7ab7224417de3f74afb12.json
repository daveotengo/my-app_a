{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    userId: userId\n  };\n};\nexport const authFailure = error => {\n  return {\n    type: actionTypes.AUTH_FAILURE,\n    error: error\n  };\n};\nexport const logout = () => {\n  return {\n    type: actionTypes.AUTH_INITIATE_LOGOUT\n  };\n};\nexport const logoutSucceed = () => {\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return {\n    type: actionTypes.AUTH_CHECK_TIMEOUT,\n    expirationTime: expirationTime\n  };\n};\nexport const auth = (email, password, isSignUp) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: isSignUp\n    };\n    axios.post(\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBrdCSdMnrFeCeXAjSJr4KeOWbGSAR6Ct4\", authData).then(response => {\n      //dispatch(authSuccess(response.data.token,response.data.email))\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  }; // return {\n  //   type: actionTypes.AUTH_USER,\n  //   email: email,\n  //   password: password,\n  //   isSignUp: isSignUp\n  // }\n};\nexport const setAuthRedirectPath = path => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path\n  };\n};\nexport const authCheckState = () => {\n  return {\n    type: actionTypes.AUTH_CHECK_STATE\n  };\n};","map":{"version":3,"sources":["/Users/daveotengo/Desktop/git/react/my-app_a/src/store/actions/auth_actions.js"],"names":["actionTypes","axios","authStart","type","AUTH_START","authSuccess","token","userId","AUTH_SUCCESS","authFailure","error","AUTH_FAILURE","logout","AUTH_INITIATE_LOGOUT","logoutSucceed","AUTH_LOGOUT","checkAuthTimeout","expirationTime","AUTH_CHECK_TIMEOUT","auth","email","password","isSignUp","dispatch","authData","returnSecureToken","post","then","response","console","log","catch","setAuthRedirectPath","path","SET_AUTH_REDIRECT_PATH","authCheckState","AUTH_CHECK_STATE"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,SAAO;AACLC,IAAAA,IAAI,EAAEH,WAAW,CAACI;AADb,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5C,SAAO;AACLJ,IAAAA,IAAI,EAAEH,WAAW,CAACQ,YADb;AAELF,IAAAA,KAAK,EAAEA,KAFF;AAGLC,IAAAA,MAAM,EAAEA;AAHH,GAAP;AAKD,CANM;AAQP,OAAO,MAAME,WAAW,GAAIC,KAAD,IAAW;AACpC,SAAO;AACLP,IAAAA,IAAI,EAAEH,WAAW,CAACW,YADb;AAELD,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID,CALM;AAMP,OAAO,MAAME,MAAM,GAAG,MAAM;AAC1B,SAAO;AACLT,IAAAA,IAAI,EAAEH,WAAW,CAACa;AADb,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMC,aAAa,GAAG,MAAM;AAClC,SAAO;AACLX,IAAAA,IAAI,EAAEH,WAAW,CAACe;AADb,GAAP;AAGA,CAJM;AAMP,OAAO,MAAMC,gBAAgB,GAAIC,cAAD,IAAoB;AAClD,SAAO;AACLd,IAAAA,IAAI,EAAEH,WAAW,CAACkB,kBADb;AAELD,IAAAA,cAAc,EAAEA;AAFX,GAAP;AAID,CALM;AAOP,OAAO,MAAME,IAAI,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,QAAlB,KAA+B;AAEjD,SAAOC,QAAQ,IAAI;AAEjBA,IAAAA,QAAQ,CAACrB,SAAS,EAAV,CAAR;AAEA,UAAMsB,QAAQ,GAAG;AAEfJ,MAAAA,KAAK,EAAEA,KAFQ;AAGfC,MAAAA,QAAQ,EAAEA,QAHK;AAIfI,MAAAA,iBAAiB,EAAEH;AAJJ,KAAjB;AAQArB,IAAAA,KAAK,CAACyB,IAAN,CAAW,uGAAX,EAAmHF,QAAnH,EACAG,IADA,CACKC,QAAQ,IAAI;AACX;AAEFC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACH,KALD,EAKGG,KALH,CAKSrB,KAAK,IAAE;AACdmB,MAAAA,OAAO,CAACC,GAAR,CAAYpB,KAAZ;AACD,KAPD;AAQD,GApBD,CAFiD,CAuBjD;AACA;AACA;AACA;AACA;AACA;AACD,CA7BM;AA+BP,OAAO,MAAMsB,mBAAmB,GAAIC,IAAD,IAAU;AAC3C,SAAO;AACL9B,IAAAA,IAAI,EAAEH,WAAW,CAACkC,sBADb;AAELD,IAAAA,IAAI,EAAEA;AAFD,GAAP;AAID,CALM;AAOP,OAAO,MAAME,cAAc,GAAG,MAAM;AAClC,SAAO;AACLhC,IAAAA,IAAI,EAAEH,WAAW,CAACoC;AADb,GAAP;AAGD,CAJM","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\n\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    userId: userId\n  };\n};\n\nexport const authFailure = (error) => {\n  return {\n    type: actionTypes.AUTH_FAILURE,\n    error: error\n  };\n};\nexport const logout = () => {\n  return {\n    type: actionTypes.AUTH_INITIATE_LOGOUT,\n  }\n};\n\nexport const logoutSucceed = () => {\n return {\n   type: actionTypes.AUTH_LOGOUT,\n  };\n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n  return {\n    type: actionTypes.AUTH_CHECK_TIMEOUT,\n    expirationTime: expirationTime\n  };\n};\n\nexport const auth = (email, password, isSignUp) => {\n\n  return dispatch => {\n\n    dispatch(authStart());\n\n    const authData = {\n      \n      email: email,\n      password: password,\n      returnSecureToken: isSignUp\n\n    }\n\n    axios.post(\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBrdCSdMnrFeCeXAjSJr4KeOWbGSAR6Ct4\",authData).\n    then(response => {\n          //dispatch(authSuccess(response.data.token,response.data.email))\n\n        console.log(response);\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  // return {\n  //   type: actionTypes.AUTH_USER,\n  //   email: email,\n  //   password: password,\n  //   isSignUp: isSignUp\n  // }\n}\n\nexport const setAuthRedirectPath = (path) => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path\n  }\n}\n\nexport const authCheckState = () => {\n  return {\n    type: actionTypes.AUTH_CHECK_STATE\n  }\n};\n"]},"metadata":{},"sourceType":"module"}